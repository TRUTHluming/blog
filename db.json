{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/images/background_b.jpg","path":"images/background_b.jpg","modified":1,"renderable":0},{"_id":"source/images/background_t.jpg","path":"images/background_t.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/STL.md","hash":"1ee248a8189713a6ba1d16eea7ca17630f6d6cd5","modified":1685166720904},{"_id":"source/_posts/encrypt.md","hash":"d16de46b1b2a5d9a5a76ff82ce58116da17b3c4d","modified":1685166709555},{"_id":"source/_posts/hello-world.md","hash":"539177bac1ee73e2dc11c2a8f68a75760494d741","modified":1685163038706},{"_id":"source/_posts/前缀和与差分.md","hash":"32c340ea0d930b92b1ea3ff723fe12cc79ef84cf","modified":1685166761976},{"_id":"source/charts/index.md","hash":"439cfed612aab2ec1a44c6058fb279e86c883bb8","modified":1686907102089},{"_id":"source/_posts/hello.md","hash":"369d6e38de35ff06a1e15fa7a35c6ca2476d1ace","modified":1685163030094},{"_id":"source/about/index.md","hash":"7b62a996f311b821051f2d1ade8105a41bbaec87","modified":1685162153294},{"_id":"source/_data/link.yml","hash":"62efe48d43d80cf4f6df4d0f625fa3a29f910032","modified":1686904444990},{"_id":"source/categories/index.md","hash":"c0d17f6a31a0988737798b07b3160ed40ee080d9","modified":1685161901029},{"_id":"source/css/custom.css","hash":"60e3a2db519a292d10bb2fe8ec87ed62df8686eb","modified":1686913673083},{"_id":"source/css/kslink.css","hash":"bfb77cc4cb323f728ef21cf8b5a177eab8483aeb","modified":1686906586823},{"_id":"source/js/kslink.js","hash":"bbe0d8c457a028632a02fc49830f3ef6e84c3da2","modified":1686906599900},{"_id":"source/js/universe.js","hash":"ea22ec4b15698ad46493cf57cb3809cfae4bbf3d","modified":1686904844760},{"_id":"source/tags/index.md","hash":"c3f6cb97271f2f68480dc9703d953ea5feea1641","modified":1685161880589},{"_id":"source/link/index.md","hash":"9fcd6dee0d49f76b2eb9e89d8d3a37f4756c1c1c","modified":1686906640040},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1685013345393},{"_id":"themes/butterfly/README.md","hash":"52967a864c244af4db8c63902586cb617ee5b8aa","modified":1685013345515},{"_id":"themes/butterfly/README_CN.md","hash":"e19021371184361261ddef1d98eb308d78922714","modified":1685013345515},{"_id":"themes/butterfly/_config.yml","hash":"5299a91032d7c1072eda7b4efd827121feabced2","modified":1686913672208},{"_id":"themes/butterfly/package.json","hash":"c55fce25d8c52283f1f1ce207819f1b3148d373a","modified":1685013345514},{"_id":"themes/butterfly/plugins.yml","hash":"acc74f24c7e94fe9ded264307a4201c9b410cd9b","modified":1685013345602},{"_id":"themes/butterfly/languages/en.yml","hash":"4e9cdb7a3570929bcf082de7a4eac49140dddc73","modified":1685013345601},{"_id":"themes/butterfly/languages/default.yml","hash":"4025c0ba440eb24705dd0293ca9ca84efb3105cc","modified":1685013345601},{"_id":"themes/butterfly/layout/archive.pug","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1686907160001},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"ee01e068f12dc33adfae5733824ea1255deb5ca6","modified":1685013345604},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"7dd849c3ba34986c57c764d9e36150b4bfffd2e9","modified":1685013345603},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1686908389218},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1685013345567},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1685013345571},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1685013345561},{"_id":"themes/butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1685013345565},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1685013345601},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1685013345600},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1685013345602},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"fc468a93a64c7a3e408fbac921c9f5a5a8f32027","modified":1685013345600},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1685013345603},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1685013345516},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1685013345552},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1685013345532},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"dd9fde431add984330e3178e06a8d74705e7340e","modified":1685013345555},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1685013345565},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1685013345562},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"83a1f2d31792206d432e8e2041e284d88327c02e","modified":1685013345570},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"8d39473ed112d113674a0f689f63fae06c72abd2","modified":1685013345570},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1685013345480},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1685013345484},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1685013345483},{"_id":"themes/butterfly/scripts/events/init.js","hash":"3ace1139182d3d367149db138990891427f3356e","modified":1685013345485},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1685013345502},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"8d25f47434deae870bbffd07efe528a40363ab4d","modified":1685013345500},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1685013345514},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1685013345500},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1685013345481},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"9ea86bd7a3c3fca3324f70b1cd4d9e42f9efb08d","modified":1685013345484},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1685013345482},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"4238e06ff448ff2ee717cd4c874f37f04d35da06","modified":1685013345486},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"ce5d5a3d07b0d76ac5e96e5f9e5783f4b601b6be","modified":1685013345499},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1685013345501},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1685013345483},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1685013345485},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"950b3dbac0b21717458a8d1769cbfc454d0eff54","modified":1685013345485},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1685013345486},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1685013345485},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1685013345486},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1685013345499},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1685013345502},{"_id":"themes/butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1685013345590},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"ea679dfe12d0e2290113b4a9d00663ce7a5ee5ad","modified":1685013345501},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1685013345502},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"d51812b43924f1bbf413c67499510dd125022005","modified":1685013345499},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1685013345516},{"_id":"themes/butterfly/source/css/var.styl","hash":"30abbb8eed880d51f61f336064d93abd709e0115","modified":1685013345598},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1685013345479},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1685013345462},{"_id":"themes/butterfly/source/js/main.js","hash":"dca55899b7c92ebee6191bef127ea5e2283ecc63","modified":1685013345498},{"_id":"themes/butterfly/source/js/utils.js","hash":"7bec147ae2b313fbd0331d87018f99715368fc4b","modified":1685013345514},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1685013345513},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"75e7a524af64fbaaaf7b05a1b1922bf6940d7afe","modified":1685013345545},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1685013345565},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1685013345535},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1685013345555},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1685013345564},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1685013345545},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"a03b3ddc06e7aa9fd07eea0d5f97c8d5addd2315","modified":1685013345568},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1685013345568},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"0c1551ef80bbece550fe520d91e21f083cbc14fe","modified":1685013345556},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1685013345564},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1685013345570},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"9698f22751778dde063cbfbd01c59ca4462ccd85","modified":1685013345567},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1685013345563},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1685013345556},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"68cda524337dfe2e1467318a4a6c124b4c3845a7","modified":1685013345553},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1685013345570},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1685013345543},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1685013345565},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1685013345538},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"294df7a74cf36af3a7030274d8b745979c1c8c70","modified":1685013345567},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1685013345571},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1685013345548},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"a59bcfbb609a099c1bf5be40b7a94e7e2b06fc4a","modified":1685013345552},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"ebecba46a5f4efe1c98a386df06c56e26fbd07b9","modified":1685013345566},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"864869c43fe5b5bb6f4ac6b13dd4bfb16ea47550","modified":1685013345569},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1685013345535},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"6528e86656906117a1af6b90e0349c2c4651d5e1","modified":1685013345551},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"fc0b09068009edd4026d90a669608cbe211aeecf","modified":1685013345566},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1685013345566},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1685013345568},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"13015a98d0d5e1ef2cec294231529010395b19de","modified":1685013345571},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1685013345539},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1685013345538},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1685013345539},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1685013345539},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1685013345540},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"e37468e63db2a0ac09b65d21b7de3e62425bb455","modified":1685013345539},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1685013345541},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"6d93564a8bd13cb9b52ee5e178db3bcbf18b1bc6","modified":1685013345540},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1685013345540},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1685013345541},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1685013345542},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"010e3d548ababca2280c4fc4168d9a4a1ee4f536","modified":1685013345560},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1685013345543},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"de10b113f9cb9a68d257a39d6409905acfd559ef","modified":1685013345589},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"7fdfbe8f97b41588bbd5c6f27e7e85a881b28954","modified":1685013345586},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"57a19eb0c418d92a88b143f56ccb8cd60e6d7ad0","modified":1686835200323},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"57adf29a3e36e4ea84384e36c034eb294dffb208","modified":1685013345579},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1685013345597},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1685013345581},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1685013345581},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1685013345592},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"83553445fbc92cad4ad220fbd87b4c3db958c32a","modified":1685013345585},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"45d71dbb2a61e30989851ba29bb8be7094574d14","modified":1685013345587},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1685013345594},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"e24046fad288a13897195038cb7a63d1014cd7b8","modified":1685013345595},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1685013345596},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"c5cfed620708807a48076b5ee59b0ba84e29aa80","modified":1685013345596},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"bbc884d6b2158a833b77a1bbc07248e17874b22e","modified":1685013345596},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"631ca35a38bc4ac052e9caf47508ff1f99842fc7","modified":1685013345596},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"ca39e634668ed4fbb43267ec4782c2b55c44e698","modified":1685013345597},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"7ff0c456fae2717ddbbb9f8fae2734d449a5448b","modified":1685013345581},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"ffea9e7c1543edcf080381e7b99828954c2f2cef","modified":1685013345596},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1685013345577},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1685013345580},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1685013345578},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"e4b9d6164e97b30c84e1218c7543c60f6b29edcc","modified":1685013345581},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1685013345584},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"bb470da1d2ba292cae0a30a252f82f37c4130d2d","modified":1685013345588},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1685013345578},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1685013345597},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"678e56ad2e46b630364540fc6a881d6801192dcd","modified":1685013345590},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"a86e4e9198b225b4b73a7a45f04b86cbbed0d231","modified":1685013345593},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1685013345580},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1685013345587},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"81ad85acf0e0fe7f9ee23c16a700e7154574d5dd","modified":1685013345587},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1685013345587},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1685013345590},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1685013345591},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"85ae91c83691ea4511f4277da1194a185251cc78","modified":1685013345593},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1685013345596},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1685013345598},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1685013345487},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1685013345394},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1685013345481},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1685013345556},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"90779382c8675e5a0b2d1ef2250294de926707f4","modified":1685013345537},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"ed6906b7c6aa7046bbad95dfdda9211997be7099","modified":1685013345527},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"6e17b2cea503eabeb328835038812cfa95f15871","modified":1685013345550},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"9ef303da16d180619da18b146ddb9bc35f66bdbf","modified":1685013345549},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"5127bc550a2edb1ab9f45416e1964c76e8201544","modified":1685013345554},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"0704efed9079c867ab5f7bee7381a6c869154c73","modified":1685013345551},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1685013345561},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"351fe25fbf02635b1f9e86e5e244c7d61f69baa7","modified":1685013345558},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"2fc5627eb63118c83df9422b47c801822e28df98","modified":1685013345554},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1685013345562},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"598790433e3c9be28b0063bff08d257acd0abf75","modified":1685013345569},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"e55b9c0f8ced231f47eb88bd7f4ec99f29c5c29d","modified":1685013345574},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"2a8d02ed9303092e8816f6489a443e7388102470","modified":1685013345574},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4d78f6266d0870c06c10eaf47c951bd4d9a7732e","modified":1685013345572},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"26ba1fc99117993087b1c6e02daa2626627d8eb1","modified":1685013345576},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1685013345549},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1685013345551},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"4ff8e67cd1c9058c0c894737b9b247a812079ae2","modified":1685013345536},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1685013345556},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1685013345568},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1685013345574},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"55acc455ca8e13211e3906cf78e487cc92accee5","modified":1685013345575},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1685013345572},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1685013345544},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1685013345546},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1685013345557},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1685013345548},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1685013345571},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1685013345561},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"0ea633b11b357afa50c200290d19c32467d58a1d","modified":1685013345562},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1685013345558},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"3ce0461534b786cb71d9141dff35fa5cb70e22b9","modified":1685013345564},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"d92bbf51626fcc5608b53273cf40db0b5b69c0d4","modified":1685013345563},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"3942d6643683a3c42bbb5f4cf4a7df21debb8498","modified":1685013345537},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0330e3063ccf0ce40e4828b8d4fbef62362e8195","modified":1685013345555},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"4fe8faf77b8420fc031ae1b54f78b2ece9fcc07e","modified":1685013345549},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1685013345560},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"44991d67abb81784c5cdb4337b2b9798fc4361e1","modified":1685013345572},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"aa6061183a32472cd1882fce445a5049108a984b","modified":1685013345569},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"b7b2aa5be4112065d5066c0f066f5f58721153bf","modified":1685013345575},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1685013345534},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"531d7b6992a737742f7b3ae343e1f03aab947f4c","modified":1685013345577},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"1c3e101445c5571ba998ce293d3984319df1b3b0","modified":1685013345550},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1685013345560},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"5ebd5e8d39c9f77f5b2d983f6cd6802ccaf98746","modified":1685013345562},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1685013345528},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1685013345533},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1685013345560},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1685013345570},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1685013345582},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1685013345589},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1685013345584},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1685013345591},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1685013345589},{"_id":"public/css/custom.css","hash":"1d0a594bc3a6570285da424339e35a769741df85","modified":1686914173509},{"_id":"public/js/kslink.js","hash":"3d5424275bd7649b1f0ca669e055db896831b712","modified":1686914173509},{"_id":"public/css/kslink.css","hash":"c411b382eb75feed5f3fc6ffba48eef9ca72a794","modified":1686914173509},{"_id":"public/js/universe.js","hash":"fb0de0b3d7842d41b46dd113723dc77f82a4d530","modified":1686914173509},{"_id":"public/charts/index.html","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1686914173509},{"_id":"public/about/index.html","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1686914173509},{"_id":"public/categories/index.html","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1686914173509},{"_id":"public/tags/index.html","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1686914173509},{"_id":"public/link/index.html","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1686914173509},{"_id":"public/2023/06/16/前缀和与差分/index.html","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1686914173509},{"_id":"public/2023/06/16/STL/index.html","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1686914173509},{"_id":"public/2023/06/16/hello-world/index.html","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1686914173509},{"_id":"public/2023/05/27/encrypt/index.html","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1686914173509},{"_id":"public/2023/05/25/hello/index.html","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1686914173509},{"_id":"public/archives/index.html","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1686914173509},{"_id":"public/archives/2023/index.html","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1686914173509},{"_id":"public/archives/2023/05/index.html","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1686914173509},{"_id":"public/archives/2023/06/index.html","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1686914173509},{"_id":"public/tags/STL/index.html","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1686914173509},{"_id":"public/tags/encrypt/index.html","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1686914173509},{"_id":"public/tags/hello2/index.html","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1686914173509},{"_id":"public/tags/hello/index.html","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1686914173509},{"_id":"public/tags/算法/index.html","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1686914173509},{"_id":"public/index.html","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1686914173509},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1686914173509},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1686914173509},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1686914173509},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1686914173509},{"_id":"public/js/utils.js","hash":"7bec147ae2b313fbd0331d87018f99715368fc4b","modified":1686914173509},{"_id":"public/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1686914173509},{"_id":"public/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1686914173509},{"_id":"public/css/index.css","hash":"8597db7458e31b2992c7c33e405485d2f0e6a8f4","modified":1686914173509},{"_id":"public/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1686914173509},{"_id":"public/js/main.js","hash":"dca55899b7c92ebee6191bef127ea5e2283ecc63","modified":1686914173509}],"Category":[{"name":"hexo","_id":"cliyidytn0000pwhgat7ohvjn"}],"Data":[{"_id":"link","data":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}],"Page":[{"title":"charts","date":"2023-06-16T09:16:20.000Z","_content":"<!-- 文章发布时间统计图 -->\n<div id=\"posts-chart\" data-start=\"2021-01\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>\n<!-- 文章标签统计图 -->\n<div id=\"tags-chart\" data-length=\"10\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>\n<!-- 文章分类统计图 -->\n<div id=\"categories-chart\" data-parent=\"true\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>","source":"charts/index.md","raw":"---\ntitle: charts\ndate: 2023-06-16 17:16:20\n---\n<!-- 文章发布时间统计图 -->\n<div id=\"posts-chart\" data-start=\"2021-01\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>\n<!-- 文章标签统计图 -->\n<div id=\"tags-chart\" data-length=\"10\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>\n<!-- 文章分类统计图 -->\n<div id=\"categories-chart\" data-parent=\"true\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>","updated":"2023-06-16T09:18:22.089Z","path":"charts/index.html","comments":1,"layout":"page","_id":"cliyh570u0000gghg4a01cml5","content":"<!-- 文章发布时间统计图 -->\n<div id=\"posts-chart\" data-start=\"2021-01\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>\n<!-- 文章标签统计图 -->\n<div id=\"tags-chart\" data-length=\"10\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>\n<!-- 文章分类统计图 -->\n<div id=\"categories-chart\" data-parent=\"true\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<!-- 文章发布时间统计图 -->\n<div id=\"posts-chart\" data-start=\"2021-01\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>\n<!-- 文章标签统计图 -->\n<div id=\"tags-chart\" data-length=\"10\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>\n<!-- 文章分类统计图 -->\n<div id=\"categories-chart\" data-parent=\"true\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"></div>"},{"title":"关于我","date":"2023-05-27T04:35:25.000Z","_content":"\n我是丁真\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2023-05-27 12:35:25\n---\n\n我是丁真\n","updated":"2023-05-27T04:35:53.294Z","path":"about/index.html","comments":1,"layout":"page","_id":"cliyh570z0002gghg4ww6fpip","content":"<p>我是丁真</p>\n","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<p>我是丁真</p>\n"},{"title":"分类","date":"2023-05-27T04:29:03.000Z","type":"catogories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2023-05-27 12:29:03\ntype: \"catogories\"\n---\n","updated":"2023-06-16T11:52:03.280Z","path":"categories/index.html","_id":"cliyh57120005gghg0dbqbrae","comments":1,"layout":"page","content":"","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":""},{"_content":"/* 背景宇宙星光  */\n#universe{\n    display: block;\n    position: fixed;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: 0;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */\n    z-index: -1;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n  background: linear-gradient(\n    -45deg,\n    #e8d8b9,\n    #eccec5,\n    #a3e9eb,\n    #bdbdf0,\n    #eec1ea\n  );\n  box-shadow: 0 0 5px rgb(66, 68, 68);\n  position: relative;\n  background-size: 400% 400%;\n  -webkit-animation: Gradient 10s ease infinite;\n  -moz-animation: Gradient 10s ease infinite;\n  animation: Gradient 10s ease infinite !important;\n}\n@-webkit-keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n@-moz-keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n@keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n/* 黑夜模式适配 */\n[data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n  background: #191919ee;\n}\n\n/* 个人信息Follow me按钮 */\n#aside-content > .card-widget.card-info > #card-info-btn {\n  background-color: #B22222;\n  border-radius: 8px;\n}\n\n\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}","source":"css/custom.css","raw":"/* 背景宇宙星光  */\n#universe{\n    display: block;\n    position: fixed;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: 0;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */\n    z-index: -1;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n  background: linear-gradient(\n    -45deg,\n    #e8d8b9,\n    #eccec5,\n    #a3e9eb,\n    #bdbdf0,\n    #eec1ea\n  );\n  box-shadow: 0 0 5px rgb(66, 68, 68);\n  position: relative;\n  background-size: 400% 400%;\n  -webkit-animation: Gradient 10s ease infinite;\n  -moz-animation: Gradient 10s ease infinite;\n  animation: Gradient 10s ease infinite !important;\n}\n@-webkit-keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n@-moz-keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n@keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n/* 黑夜模式适配 */\n[data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n  background: #191919ee;\n}\n\n/* 个人信息Follow me按钮 */\n#aside-content > .card-widget.card-info > #card-info-btn {\n  background-color: #B22222;\n  border-radius: 8px;\n}\n\n\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}","date":"2023-06-16T11:32:25.498Z","updated":"2023-06-16T11:32:25.498Z","path":"css/custom.css","layout":"false","_id":"cliyh57130007gghgc19uggq3","title":"","comments":1,"content":"/* 背景宇宙星光  */\n#universe{\n    display: block;\n    position: fixed;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: 0;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */\n    z-index: -1;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n  background: linear-gradient(\n    -45deg,\n    #e8d8b9,\n    #eccec5,\n    #a3e9eb,\n    #bdbdf0,\n    #eec1ea\n  );\n  box-shadow: 0 0 5px rgb(66, 68, 68);\n  position: relative;\n  background-size: 400% 400%;\n  -webkit-animation: Gradient 10s ease infinite;\n  -moz-animation: Gradient 10s ease infinite;\n  animation: Gradient 10s ease infinite !important;\n}\n@-webkit-keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n@-moz-keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n@keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n/* 黑夜模式适配 */\n[data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n  background: #191919ee;\n}\n\n/* 个人信息Follow me按钮 */\n#aside-content > .card-widget.card-info > #card-info-btn {\n  background-color: #B22222;\n  border-radius: 8px;\n}\n\n\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"/* 背景宇宙星光  */\n#universe{\n    display: block;\n    position: fixed;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: 0;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */\n    z-index: -1;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n  background: linear-gradient(\n    -45deg,\n    #e8d8b9,\n    #eccec5,\n    #a3e9eb,\n    #bdbdf0,\n    #eec1ea\n  );\n  box-shadow: 0 0 5px rgb(66, 68, 68);\n  position: relative;\n  background-size: 400% 400%;\n  -webkit-animation: Gradient 10s ease infinite;\n  -moz-animation: Gradient 10s ease infinite;\n  animation: Gradient 10s ease infinite !important;\n}\n@-webkit-keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n@-moz-keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n@keyframes Gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n/* 黑夜模式适配 */\n[data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n  background: #191919ee;\n}\n\n/* 个人信息Follow me按钮 */\n#aside-content > .card-widget.card-info > #card-info-btn {\n  background-color: #B22222;\n  border-radius: 8px;\n}\n\n\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}"},{"_content":"var leonus = {\n    linkCom: e => {\n        var t = document.querySelector(\".el-textarea__inner\");\n        \"bf\" == e ? (t.value = \"```yml\\n\", t.value += \"- name: \\n  link: \\n  avatar: \\n  descr: \\n  siteshot: \", t.value += \"\\n```\", t.setSelectionRange(15, 15)) : (t.value = \"站点名称：\\n站点地址：\\n头像链接：\\n站点描述：\\n站点截图：\", t.setSelectionRange(5, 5)), t.focus()\n    },\n    owoBig: () => {\n        if (!document.getElementById(\"post-comment\") || document.body.clientWidth < 768) return;\n        let e = 1,\n            t = \"\",\n            o = document.createElement(\"div\"),\n            n = document.querySelector(\"body\");\n        o.id = \"owo-big\", n.appendChild(o), new MutationObserver((l => {\n            for (let a = 0; a < l.length; a++) {\n                let i = l[a].addedNodes,\n                    s = \"\";\n                if (2 == i.length && \"OwO-body\" == i[1].className) s = i[1];\n                else {\n                    if (1 != i.length || \"tk-comment\" != i[0].className) continue;\n                    s = i[0]\n                }\n                s.onmouseover = l => {\n                    e && (\"OwO-body\" == s.className && \"IMG\" == l.target.tagName || \"tk-owo-emotion\" == l.target.className) && (e = 0, t = setTimeout((() => {\n                        let e = 3 * l.path[0].clientHeight,\n                            t = 3 * l.path[0].clientWidth,\n                            a = l.x - l.offsetX - (t - l.path[0].clientWidth) / 2,\n                            i = l.y - l.offsetY;\n                        a + t > n.clientWidth && (a -= a + t - n.clientWidth + 10), a < 0 && (a = 10), o.style.cssText = `display:flex; height:${e}px; width:${t}px; left:${a}px; top:${i}px;`, o.innerHTML = `<img src=\"${l.target.src}\">`\n                    }), 300))\n                }, s.onmouseout = () => {\n                    o.style.display = \"none\", e = 1, clearTimeout(t)\n                }\n            }\n        })).observe(document.getElementById(\"post-comment\"), {\n            subtree: !0,\n            childList: !0\n        })\n    },\n};","source":"js/kslink.js","raw":"var leonus = {\n    linkCom: e => {\n        var t = document.querySelector(\".el-textarea__inner\");\n        \"bf\" == e ? (t.value = \"```yml\\n\", t.value += \"- name: \\n  link: \\n  avatar: \\n  descr: \\n  siteshot: \", t.value += \"\\n```\", t.setSelectionRange(15, 15)) : (t.value = \"站点名称：\\n站点地址：\\n头像链接：\\n站点描述：\\n站点截图：\", t.setSelectionRange(5, 5)), t.focus()\n    },\n    owoBig: () => {\n        if (!document.getElementById(\"post-comment\") || document.body.clientWidth < 768) return;\n        let e = 1,\n            t = \"\",\n            o = document.createElement(\"div\"),\n            n = document.querySelector(\"body\");\n        o.id = \"owo-big\", n.appendChild(o), new MutationObserver((l => {\n            for (let a = 0; a < l.length; a++) {\n                let i = l[a].addedNodes,\n                    s = \"\";\n                if (2 == i.length && \"OwO-body\" == i[1].className) s = i[1];\n                else {\n                    if (1 != i.length || \"tk-comment\" != i[0].className) continue;\n                    s = i[0]\n                }\n                s.onmouseover = l => {\n                    e && (\"OwO-body\" == s.className && \"IMG\" == l.target.tagName || \"tk-owo-emotion\" == l.target.className) && (e = 0, t = setTimeout((() => {\n                        let e = 3 * l.path[0].clientHeight,\n                            t = 3 * l.path[0].clientWidth,\n                            a = l.x - l.offsetX - (t - l.path[0].clientWidth) / 2,\n                            i = l.y - l.offsetY;\n                        a + t > n.clientWidth && (a -= a + t - n.clientWidth + 10), a < 0 && (a = 10), o.style.cssText = `display:flex; height:${e}px; width:${t}px; left:${a}px; top:${i}px;`, o.innerHTML = `<img src=\"${l.target.src}\">`\n                    }), 300))\n                }, s.onmouseout = () => {\n                    o.style.display = \"none\", e = 1, clearTimeout(t)\n                }\n            }\n        })).observe(document.getElementById(\"post-comment\"), {\n            subtree: !0,\n            childList: !0\n        })\n    },\n};","date":"2023-06-16T09:09:59.900Z","updated":"2023-06-16T09:09:59.900Z","path":"js/kslink.js","layout":"false","title":"","comments":1,"_id":"cliyh57140009gghg64ba5t0n","content":"var leonus = {\n    linkCom: e => {\n        var t = document.querySelector(\".el-textarea__inner\");\n        \"bf\" == e ? (t.value = \"```yml\\n\", t.value += \"- name: \\n  link: \\n  avatar: \\n  descr: \\n  siteshot: \", t.value += \"\\n```\", t.setSelectionRange(15, 15)) : (t.value = \"站点名称：\\n站点地址：\\n头像链接：\\n站点描述：\\n站点截图：\", t.setSelectionRange(5, 5)), t.focus()\n    },\n    owoBig: () => {\n        if (!document.getElementById(\"post-comment\") || document.body.clientWidth < 768) return;\n        let e = 1,\n            t = \"\",\n            o = document.createElement(\"div\"),\n            n = document.querySelector(\"body\");\n        o.id = \"owo-big\", n.appendChild(o), new MutationObserver((l => {\n            for (let a = 0; a < l.length; a++) {\n                let i = l[a].addedNodes,\n                    s = \"\";\n                if (2 == i.length && \"OwO-body\" == i[1].className) s = i[1];\n                else {\n                    if (1 != i.length || \"tk-comment\" != i[0].className) continue;\n                    s = i[0]\n                }\n                s.onmouseover = l => {\n                    e && (\"OwO-body\" == s.className && \"IMG\" == l.target.tagName || \"tk-owo-emotion\" == l.target.className) && (e = 0, t = setTimeout((() => {\n                        let e = 3 * l.path[0].clientHeight,\n                            t = 3 * l.path[0].clientWidth,\n                            a = l.x - l.offsetX - (t - l.path[0].clientWidth) / 2,\n                            i = l.y - l.offsetY;\n                        a + t > n.clientWidth && (a -= a + t - n.clientWidth + 10), a < 0 && (a = 10), o.style.cssText = `display:flex; height:${e}px; width:${t}px; left:${a}px; top:${i}px;`, o.innerHTML = `<img src=\"${l.target.src}\">`\n                    }), 300))\n                }, s.onmouseout = () => {\n                    o.style.display = \"none\", e = 1, clearTimeout(t)\n                }\n            }\n        })).observe(document.getElementById(\"post-comment\"), {\n            subtree: !0,\n            childList: !0\n        })\n    },\n};","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"var leonus = {\n    linkCom: e => {\n        var t = document.querySelector(\".el-textarea__inner\");\n        \"bf\" == e ? (t.value = \"```yml\\n\", t.value += \"- name: \\n  link: \\n  avatar: \\n  descr: \\n  siteshot: \", t.value += \"\\n```\", t.setSelectionRange(15, 15)) : (t.value = \"站点名称：\\n站点地址：\\n头像链接：\\n站点描述：\\n站点截图：\", t.setSelectionRange(5, 5)), t.focus()\n    },\n    owoBig: () => {\n        if (!document.getElementById(\"post-comment\") || document.body.clientWidth < 768) return;\n        let e = 1,\n            t = \"\",\n            o = document.createElement(\"div\"),\n            n = document.querySelector(\"body\");\n        o.id = \"owo-big\", n.appendChild(o), new MutationObserver((l => {\n            for (let a = 0; a < l.length; a++) {\n                let i = l[a].addedNodes,\n                    s = \"\";\n                if (2 == i.length && \"OwO-body\" == i[1].className) s = i[1];\n                else {\n                    if (1 != i.length || \"tk-comment\" != i[0].className) continue;\n                    s = i[0]\n                }\n                s.onmouseover = l => {\n                    e && (\"OwO-body\" == s.className && \"IMG\" == l.target.tagName || \"tk-owo-emotion\" == l.target.className) && (e = 0, t = setTimeout((() => {\n                        let e = 3 * l.path[0].clientHeight,\n                            t = 3 * l.path[0].clientWidth,\n                            a = l.x - l.offsetX - (t - l.path[0].clientWidth) / 2,\n                            i = l.y - l.offsetY;\n                        a + t > n.clientWidth && (a -= a + t - n.clientWidth + 10), a < 0 && (a = 10), o.style.cssText = `display:flex; height:${e}px; width:${t}px; left:${a}px; top:${i}px;`, o.innerHTML = `<img src=\"${l.target.src}\">`\n                    }), 300))\n                }, s.onmouseout = () => {\n                    o.style.display = \"none\", e = 1, clearTimeout(t)\n                }\n            }\n        })).observe(document.getElementById(\"post-comment\"), {\n            subtree: !0,\n            childList: !0\n        })\n    },\n};"},{"_content":"/* 添加友链按钮 */\n/* 快速填写格式 */\n.addBtn {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n.addBtn button {\n    transition: .2s;\n    display: flex;\n    margin: 5px auto;\n    color: var(--global-bg);\n    padding: 15px;\n    border-radius: 40px;\n    background: var(--search-result-title);\n    align-items: center;\n}\n\nbutton {\n    padding: 0;\n    outline: 0;\n    border: none;\n    background: 0 0;\n    cursor: pointer;\n    touch-action: manipulation;\n}\n.fa-solid, .fas {\n    font-family: \"Font Awesome 6 Free\";\n    font-weight: 900;\n}\n.addBtn i {\n    font-size: 1.3rem;\n    margin-right: 10px;\n}\n.addBtn button:hover {\n    background: var(--theme-color);\n    color: #fff;\n}","source":"css/kslink.css","raw":"/* 添加友链按钮 */\n/* 快速填写格式 */\n.addBtn {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n.addBtn button {\n    transition: .2s;\n    display: flex;\n    margin: 5px auto;\n    color: var(--global-bg);\n    padding: 15px;\n    border-radius: 40px;\n    background: var(--search-result-title);\n    align-items: center;\n}\n\nbutton {\n    padding: 0;\n    outline: 0;\n    border: none;\n    background: 0 0;\n    cursor: pointer;\n    touch-action: manipulation;\n}\n.fa-solid, .fas {\n    font-family: \"Font Awesome 6 Free\";\n    font-weight: 900;\n}\n.addBtn i {\n    font-size: 1.3rem;\n    margin-right: 10px;\n}\n.addBtn button:hover {\n    background: var(--theme-color);\n    color: #fff;\n}","date":"2023-06-16T09:09:46.823Z","updated":"2023-06-16T09:09:46.823Z","path":"css/kslink.css","layout":"false","title":"","comments":1,"_id":"cliyh5715000dgghgg0r5a4ii","content":"/* 添加友链按钮 */\n/* 快速填写格式 */\n.addBtn {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n.addBtn button {\n    transition: .2s;\n    display: flex;\n    margin: 5px auto;\n    color: var(--global-bg);\n    padding: 15px;\n    border-radius: 40px;\n    background: var(--search-result-title);\n    align-items: center;\n}\n\nbutton {\n    padding: 0;\n    outline: 0;\n    border: none;\n    background: 0 0;\n    cursor: pointer;\n    touch-action: manipulation;\n}\n.fa-solid, .fas {\n    font-family: \"Font Awesome 6 Free\";\n    font-weight: 900;\n}\n.addBtn i {\n    font-size: 1.3rem;\n    margin-right: 10px;\n}\n.addBtn button:hover {\n    background: var(--theme-color);\n    color: #fff;\n}","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"/* 添加友链按钮 */\n/* 快速填写格式 */\n.addBtn {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n.addBtn button {\n    transition: .2s;\n    display: flex;\n    margin: 5px auto;\n    color: var(--global-bg);\n    padding: 15px;\n    border-radius: 40px;\n    background: var(--search-result-title);\n    align-items: center;\n}\n\nbutton {\n    padding: 0;\n    outline: 0;\n    border: none;\n    background: 0 0;\n    cursor: pointer;\n    touch-action: manipulation;\n}\n.fa-solid, .fas {\n    font-family: \"Font Awesome 6 Free\";\n    font-weight: 900;\n}\n.addBtn i {\n    font-size: 1.3rem;\n    margin-right: 10px;\n}\n.addBtn button:hover {\n    background: var(--theme-color);\n    color: #fff;\n}"},{"title":"标签","date":"2023-05-27T04:28:46.000Z","type":"tags","orderby":"random","order":1,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2023-05-27 12:28:46\ntype: \"tags\"\norderby: random\norder: 1\n---\n","updated":"2023-05-27T04:31:20.589Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cliyh5715000egghg92src3oh","content":"","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":""},{"title":"友链","date":"2023-05-27T04:29:17.000Z","type":"link","_content":"<div class=\"addBtn\"><button onclick=\"leonus.linkCom()\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (默认样式)</button> <button onclick=\"leonus.linkCom(&quot;bf&quot;)\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (Butterfly)</button></div>\n<link rel=\"stylesheet\" href=\"/css/kslink.css\">\n<script src=\"/js/kslink.js\"></script>","source":"link/index.md","raw":"---\ntitle: 友链\ndate: 2023-05-27 12:29:17\ntype: \"link\"\n---\n<div class=\"addBtn\"><button onclick=\"leonus.linkCom()\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (默认样式)</button> <button onclick=\"leonus.linkCom(&quot;bf&quot;)\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (Butterfly)</button></div>\n<link rel=\"stylesheet\" href=\"/css/kslink.css\">\n<script src=\"/js/kslink.js\"></script>","updated":"2023-06-16T09:10:40.040Z","path":"link/index.html","comments":1,"layout":"page","_id":"cliyh5716000ggghg35jbbhxb","content":"<div class=\"addBtn\"><button onclick=\"leonus.linkCom()\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (默认样式)</button> <button onclick=\"leonus.linkCom(&quot;bf&quot;)\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (Butterfly)</button></div>\n<link rel=\"stylesheet\" href=\"/css/kslink.css\">\n<script src=\"/js/kslink.js\"></script>","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<div class=\"addBtn\"><button onclick=\"leonus.linkCom()\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (默认样式)</button> <button onclick=\"leonus.linkCom(&quot;bf&quot;)\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (Butterfly)</button></div>\n<link rel=\"stylesheet\" href=\"/css/kslink.css\">\n<script src=\"/js/kslink.js\"></script>"},{"_content":"function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById(\"universe\"),o=!0,a=\"180,184,240\",r=\"226,225,142\",d=\"226,225,224\",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute(\"width\",n),s.setAttribute(\"height\",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle=\"rgba(\"+a+\",\"+this.opacity+\")\",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle=\"rgba(\"+d+\",\"+this.opacity+\")\",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle=\"rgba(\"+d+\",\"+(this.opacity-this.opacity/20*t)+\")\",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle=\"rgba(\"+r+\",\"+this.opacity+\")\",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener(\"resize\",f,!1),function(){h=s.getContext(\"2d\");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};\ndark()","source":"js/universe.js","raw":"function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById(\"universe\"),o=!0,a=\"180,184,240\",r=\"226,225,142\",d=\"226,225,224\",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute(\"width\",n),s.setAttribute(\"height\",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle=\"rgba(\"+a+\",\"+this.opacity+\")\",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle=\"rgba(\"+d+\",\"+this.opacity+\")\",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle=\"rgba(\"+d+\",\"+(this.opacity-this.opacity/20*t)+\")\",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle=\"rgba(\"+r+\",\"+this.opacity+\")\",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener(\"resize\",f,!1),function(){h=s.getContext(\"2d\");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};\ndark()","date":"2023-06-16T08:40:44.760Z","updated":"2023-06-16T08:40:44.760Z","path":"js/universe.js","layout":"false","title":"","comments":1,"_id":"cliyh5716000igghgcdu425sc","content":"function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById(\"universe\"),o=!0,a=\"180,184,240\",r=\"226,225,142\",d=\"226,225,224\",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute(\"width\",n),s.setAttribute(\"height\",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle=\"rgba(\"+a+\",\"+this.opacity+\")\",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle=\"rgba(\"+d+\",\"+this.opacity+\")\",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle=\"rgba(\"+d+\",\"+(this.opacity-this.opacity/20*t)+\")\",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle=\"rgba(\"+r+\",\"+this.opacity+\")\",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener(\"resize\",f,!1),function(){h=s.getContext(\"2d\");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};\ndark()","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById(\"universe\"),o=!0,a=\"180,184,240\",r=\"226,225,142\",d=\"226,225,224\",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute(\"width\",n),s.setAttribute(\"height\",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle=\"rgba(\"+a+\",\"+this.opacity+\")\",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle=\"rgba(\"+d+\",\"+this.opacity+\")\",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle=\"rgba(\"+d+\",\"+(this.opacity-this.opacity/20*t)+\")\",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle=\"rgba(\"+r+\",\"+this.opacity+\")\",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener(\"resize\",f,!1),function(){h=s.getContext(\"2d\");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};\ndark()"}],"Post":[{"title":"STL天下第一！！！","date":"2023-06-16T11:16:02.333Z","_content":"\n\n\n<!-- more -->\n**STL天下第一！！！！！**   \n\n------------   \n### 与STL有关及STL中包含的数据结构都会写在此篇   \n\n### **vector(不定长数组)**  \n需调用``<vector>``头文件   \n函数   \n1. **size/empty**   \nsize函数返回vector长度，empty返回一个bool类型，表示是否为空，时间复杂度皆为O（1）。      \n\n~~其实所有STL容器都支持此操作~~   \n\n2. **clear**   \n清空数组  \n3. **迭代器**  \n可以看为STL容器的指针，可以用*解除引用。   \n一个保存``int``的``vector``的迭代器的声明方式为：  \n``vector<int>::iterator it``\nit便为迭代器，可以与其它整数相加减\n\n4. **begin/end** （左开右闭）   \nbegin返回第一个元素，end返回最后一个元素的后一位（front和back等效）   \n5. **push_back()和pop_back()**   \npush将元素插入尾部，pop将元素从头部移除   \n\n\n\n\n### **queue队列**  \n头文件为``<queue>``   \n1. 循环队列``queue``   \n``push``  \n``pop``   \n``front``   \n``back``   \n(大同小异所以不再详解)   \n2. 优先队列``priority_queue``\n``push``  \n``pop``   \n``top`` (查询堆顶元素/默认为最大值)   \n### 细谈优先队列   \n\n优先队列有三个参数，分别是要储存的数据类型，所使用容器（默认为``vector``），优先级判定（默认大根堆）。\n\n\n优先队列的优先级也是可以和``sort``一样改变的！\n\n只要在结构体中重载<运算符即可。\n~~~c++\nqueue<int> q;\nstruct rec{…}; queue<rec> q;                        //结构体rec中必须定义小于号\npriority_queue<int> q;                              // 大根堆\npriority_queue<int, vector<int>, greater<int>> q;   // 小根堆，greater是已编写好的。\npriority_queue<pair<int, int>>q;\n~~~\n\n\n ### **栈stack**  \n\n 头文件为``<stack>``   \n ``push``   \n ``pop``\n\n 无话可说  \n ###  **双端队列deque**   \n\n 头文件与queue相同 \n\n []              // 随机访问   \n``begin/end``       // 返回deque的头/尾迭代器  \n``front/back``      // 队头/队尾元素   \n``push_back``       // 从队尾入队   \n``push_front``      // 从队头入队   \n``pop_back``        // 从队尾出队   \n``pop_front``       // 从队头出队   \n``clea``r           // 清空队列  \n\n### **集合set**   \n\n头文件为``<set>``\n\n#### ``set``\n\n声明\n\n  ``set<int> s;``   \n``struct rec{…}; set<rec> s;``  // 结构体rec中必须定义小于号   \n``multiset<double> s;``\n\n1. ``size/empty/clear``    \n与vector类似，不在讲\n2. ``insert``   \n``insert(x)``将x插入到set中\n3.  ``begin/end``\n返回集合的首、尾迭代器，时间复杂度均为 O(1)O(1)。  \n``s.begin()``是指向集合中最小元素的迭代器。   \n``s.end()``是指向集合中最大元素的下一个位置的迭代器。换言之，就像``vector``一样，是一个“前闭后开”的形式。因此-- ``s.end()``是指向集合中最大元素的迭代器。\n4. ``find``\n``s.find(x)``在集合s中查找等于x的元素，并返回指向该元素的迭代器。若不存在，则返回``s.end()``。时间复杂度为 O(logn)  \n5. count\ns.count(x)返回集合s中等于x的元素个数，时间复杂度为 O(k+logn)O(k+logn)，其中 kk 为元素x的个数。\n\n### **map**  \n\n头文件为``<map>``\n\nmap容器是一个键值对key-value的映射，其内部实现是一棵以key为关键码的红黑树。Map的key和value可以是任意类型，其中key必须定义小于号运算符。\n\n``map<key_type, value_type> name;``\n\n1.  ``size/empty/clear/begin/end``\n均与set类似。\n\n2.  ``insert/erase``\n与set类似，但其参数均是pair<key_type, value_type>。\n\n3.  ``find``\nh.find(x)在变量名为h的map中查找key为x的二元组。\n\n4.  ``[]``操作符\nh[key]返回key映射的value的引用，时间复杂度为 O(logn)O(logn)。\n\n[]操作符是map最吸引人的地方。我们可以很方便地通过h[key]来得到key对应的value，还可以对h[key]进行赋值操作，改变key对应的value。\n\n\n\n \n\n\n\n\n\n\n","source":"_posts/STL.md","raw":"---\ntitle: STL天下第一！！！\ndate: 0\ntags: STL\n---\n\n\n\n<!-- more -->\n**STL天下第一！！！！！**   \n\n------------   \n### 与STL有关及STL中包含的数据结构都会写在此篇   \n\n### **vector(不定长数组)**  \n需调用``<vector>``头文件   \n函数   \n1. **size/empty**   \nsize函数返回vector长度，empty返回一个bool类型，表示是否为空，时间复杂度皆为O（1）。      \n\n~~其实所有STL容器都支持此操作~~   \n\n2. **clear**   \n清空数组  \n3. **迭代器**  \n可以看为STL容器的指针，可以用*解除引用。   \n一个保存``int``的``vector``的迭代器的声明方式为：  \n``vector<int>::iterator it``\nit便为迭代器，可以与其它整数相加减\n\n4. **begin/end** （左开右闭）   \nbegin返回第一个元素，end返回最后一个元素的后一位（front和back等效）   \n5. **push_back()和pop_back()**   \npush将元素插入尾部，pop将元素从头部移除   \n\n\n\n\n### **queue队列**  \n头文件为``<queue>``   \n1. 循环队列``queue``   \n``push``  \n``pop``   \n``front``   \n``back``   \n(大同小异所以不再详解)   \n2. 优先队列``priority_queue``\n``push``  \n``pop``   \n``top`` (查询堆顶元素/默认为最大值)   \n### 细谈优先队列   \n\n优先队列有三个参数，分别是要储存的数据类型，所使用容器（默认为``vector``），优先级判定（默认大根堆）。\n\n\n优先队列的优先级也是可以和``sort``一样改变的！\n\n只要在结构体中重载<运算符即可。\n~~~c++\nqueue<int> q;\nstruct rec{…}; queue<rec> q;                        //结构体rec中必须定义小于号\npriority_queue<int> q;                              // 大根堆\npriority_queue<int, vector<int>, greater<int>> q;   // 小根堆，greater是已编写好的。\npriority_queue<pair<int, int>>q;\n~~~\n\n\n ### **栈stack**  \n\n 头文件为``<stack>``   \n ``push``   \n ``pop``\n\n 无话可说  \n ###  **双端队列deque**   \n\n 头文件与queue相同 \n\n []              // 随机访问   \n``begin/end``       // 返回deque的头/尾迭代器  \n``front/back``      // 队头/队尾元素   \n``push_back``       // 从队尾入队   \n``push_front``      // 从队头入队   \n``pop_back``        // 从队尾出队   \n``pop_front``       // 从队头出队   \n``clea``r           // 清空队列  \n\n### **集合set**   \n\n头文件为``<set>``\n\n#### ``set``\n\n声明\n\n  ``set<int> s;``   \n``struct rec{…}; set<rec> s;``  // 结构体rec中必须定义小于号   \n``multiset<double> s;``\n\n1. ``size/empty/clear``    \n与vector类似，不在讲\n2. ``insert``   \n``insert(x)``将x插入到set中\n3.  ``begin/end``\n返回集合的首、尾迭代器，时间复杂度均为 O(1)O(1)。  \n``s.begin()``是指向集合中最小元素的迭代器。   \n``s.end()``是指向集合中最大元素的下一个位置的迭代器。换言之，就像``vector``一样，是一个“前闭后开”的形式。因此-- ``s.end()``是指向集合中最大元素的迭代器。\n4. ``find``\n``s.find(x)``在集合s中查找等于x的元素，并返回指向该元素的迭代器。若不存在，则返回``s.end()``。时间复杂度为 O(logn)  \n5. count\ns.count(x)返回集合s中等于x的元素个数，时间复杂度为 O(k+logn)O(k+logn)，其中 kk 为元素x的个数。\n\n### **map**  \n\n头文件为``<map>``\n\nmap容器是一个键值对key-value的映射，其内部实现是一棵以key为关键码的红黑树。Map的key和value可以是任意类型，其中key必须定义小于号运算符。\n\n``map<key_type, value_type> name;``\n\n1.  ``size/empty/clear/begin/end``\n均与set类似。\n\n2.  ``insert/erase``\n与set类似，但其参数均是pair<key_type, value_type>。\n\n3.  ``find``\nh.find(x)在变量名为h的map中查找key为x的二元组。\n\n4.  ``[]``操作符\nh[key]返回key映射的value的引用，时间复杂度为 O(logn)O(logn)。\n\n[]操作符是map最吸引人的地方。我们可以很方便地通过h[key]来得到key对应的value，还可以对h[key]进行赋值操作，改变key对应的value。\n\n\n\n \n\n\n\n\n\n\n","slug":"STL","published":1,"updated":"2023-05-27T05:52:00.904Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliyh570x0001gghgfg1nf16t","content":"<span id=\"more\"></span>\n<p><strong>STL天下第一！！！！！</strong>   </p>\n<hr>\n<h3 id=\"与STL有关及STL中包含的数据结构都会写在此篇\"><a href=\"#与STL有关及STL中包含的数据结构都会写在此篇\" class=\"headerlink\" title=\"与STL有关及STL中包含的数据结构都会写在此篇\"></a>与STL有关及STL中包含的数据结构都会写在此篇</h3><h3 id=\"vector-不定长数组\"><a href=\"#vector-不定长数组\" class=\"headerlink\" title=\"vector(不定长数组)\"></a><strong>vector(不定长数组)</strong></h3><p>需调用<code>&lt;vector&gt;</code>头文件<br>函数   </p>\n<ol>\n<li><strong>size&#x2F;empty</strong><br>size函数返回vector长度，empty返回一个bool类型，表示是否为空，时间复杂度皆为O（1）。</li>\n</ol>\n<p><del>其实所有STL容器都支持此操作</del>   </p>\n<ol start=\"2\">\n<li><p><strong>clear</strong><br>清空数组  </p>\n</li>\n<li><p><strong>迭代器</strong><br>可以看为STL容器的指针，可以用*解除引用。<br>一个保存<code>int</code>的<code>vector</code>的迭代器的声明方式为：<br><code>vector&lt;int&gt;::iterator it</code><br>it便为迭代器，可以与其它整数相加减</p>\n</li>\n<li><p><strong>begin&#x2F;end</strong> （左开右闭）<br>begin返回第一个元素，end返回最后一个元素的后一位（front和back等效）   </p>\n</li>\n<li><p><strong>push_back()和pop_back()</strong><br>push将元素插入尾部，pop将元素从头部移除</p>\n</li>\n</ol>\n<h3 id=\"queue队列\"><a href=\"#queue队列\" class=\"headerlink\" title=\"queue队列\"></a><strong>queue队列</strong></h3><p>头文件为<code>&lt;queue&gt;</code>   </p>\n<ol>\n<li>循环队列<code>queue</code><br><code>push</code><br><code>pop</code><br><code>front</code><br><code>back</code><br>(大同小异所以不再详解)   </li>\n<li>优先队列<code>priority_queue</code><br><code>push</code><br><code>pop</code><br><code>top</code> (查询堆顶元素&#x2F;默认为最大值)</li>\n</ol>\n<h3 id=\"细谈优先队列\"><a href=\"#细谈优先队列\" class=\"headerlink\" title=\"细谈优先队列\"></a>细谈优先队列</h3><p>优先队列有三个参数，分别是要储存的数据类型，所使用容器（默认为<code>vector</code>），优先级判定（默认大根堆）。</p>\n<p>优先队列的优先级也是可以和<code>sort</code>一样改变的！</p>\n<p>只要在结构体中重载&lt;运算符即可。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">queue&lt;<span class=\"type\">int</span>&gt; q;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">rec</span>&#123;…&#125;; queue&lt;rec&gt; q;                        <span class=\"comment\">//结构体rec中必须定义小于号</span></span><br><span class=\"line\">priority_queue&lt;<span class=\"type\">int</span>&gt; q;                              <span class=\"comment\">// 大根堆</span></span><br><span class=\"line\">priority_queue&lt;<span class=\"type\">int</span>, vector&lt;<span class=\"type\">int</span>&gt;, greater&lt;<span class=\"type\">int</span>&gt;&gt; q;   <span class=\"comment\">// 小根堆，greater是已编写好的。</span></span><br><span class=\"line\">priority_queue&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;q;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"栈stack\"><a href=\"#栈stack\" class=\"headerlink\" title=\"栈stack\"></a><strong>栈stack</strong></h3><p> 头文件为<code>&lt;stack&gt;</code><br> <code>push</code><br> <code>pop</code></p>\n<p> 无话可说  </p>\n<h3 id=\"双端队列deque\"><a href=\"#双端队列deque\" class=\"headerlink\" title=\"双端队列deque\"></a><strong>双端队列deque</strong></h3><p> 头文件与queue相同 </p>\n<p> []              &#x2F;&#x2F; 随机访问<br><code>begin/end</code>       &#x2F;&#x2F; 返回deque的头&#x2F;尾迭代器<br><code>front/back</code>      &#x2F;&#x2F; 队头&#x2F;队尾元素<br><code>push_back</code>       &#x2F;&#x2F; 从队尾入队<br><code>push_front</code>      &#x2F;&#x2F; 从队头入队<br><code>pop_back</code>        &#x2F;&#x2F; 从队尾出队<br><code>pop_front</code>       &#x2F;&#x2F; 从队头出队<br><code>clea</code>r           &#x2F;&#x2F; 清空队列  </p>\n<h3 id=\"集合set\"><a href=\"#集合set\" class=\"headerlink\" title=\"集合set\"></a><strong>集合set</strong></h3><p>头文件为<code>&lt;set&gt;</code></p>\n<h4 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a><code>set</code></h4><p>声明</p>\n<p>  <code>set&lt;int&gt; s;</code><br><code>struct rec&#123;…&#125;; set&lt;rec&gt; s;</code>  &#x2F;&#x2F; 结构体rec中必须定义小于号<br><code>multiset&lt;double&gt; s;</code></p>\n<ol>\n<li><code>size/empty/clear</code><br>与vector类似，不在讲</li>\n<li><code>insert</code><br><code>insert(x)</code>将x插入到set中</li>\n<li><code>begin/end</code><br>返回集合的首、尾迭代器，时间复杂度均为 O(1)O(1)。<br><code>s.begin()</code>是指向集合中最小元素的迭代器。<br><code>s.end()</code>是指向集合中最大元素的下一个位置的迭代器。换言之，就像<code>vector</code>一样，是一个“前闭后开”的形式。因此– <code>s.end()</code>是指向集合中最大元素的迭代器。</li>\n<li><code>find</code><br><code>s.find(x)</code>在集合s中查找等于x的元素，并返回指向该元素的迭代器。若不存在，则返回<code>s.end()</code>。时间复杂度为 O(logn)  </li>\n<li>count<br>s.count(x)返回集合s中等于x的元素个数，时间复杂度为 O(k+logn)O(k+logn)，其中 kk 为元素x的个数。</li>\n</ol>\n<h3 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a><strong>map</strong></h3><p>头文件为<code>&lt;map&gt;</code></p>\n<p>map容器是一个键值对key-value的映射，其内部实现是一棵以key为关键码的红黑树。Map的key和value可以是任意类型，其中key必须定义小于号运算符。</p>\n<p><code>map&lt;key_type, value_type&gt; name;</code></p>\n<ol>\n<li><p><code>size/empty/clear/begin/end</code><br>均与set类似。</p>\n</li>\n<li><p><code>insert/erase</code><br>与set类似，但其参数均是pair&lt;key_type, value_type&gt;。</p>\n</li>\n<li><p><code>find</code><br>h.find(x)在变量名为h的map中查找key为x的二元组。</p>\n</li>\n<li><p><code>[]</code>操作符<br>h[key]返回key映射的value的引用，时间复杂度为 O(logn)O(logn)。</p>\n</li>\n</ol>\n<p>[]操作符是map最吸引人的地方。我们可以很方便地通过h[key]来得到key对应的value，还可以对h[key]进行赋值操作，改变key对应的value。</p>\n","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<p><strong>STL天下第一！！！！！</strong>   </p>\n<hr>\n<h3 id=\"与STL有关及STL中包含的数据结构都会写在此篇\"><a href=\"#与STL有关及STL中包含的数据结构都会写在此篇\" class=\"headerlink\" title=\"与STL有关及STL中包含的数据结构都会写在此篇\"></a>与STL有关及STL中包含的数据结构都会写在此篇</h3><h3 id=\"vector-不定长数组\"><a href=\"#vector-不定长数组\" class=\"headerlink\" title=\"vector(不定长数组)\"></a><strong>vector(不定长数组)</strong></h3><p>需调用<code>&lt;vector&gt;</code>头文件<br>函数   </p>\n<ol>\n<li><strong>size&#x2F;empty</strong><br>size函数返回vector长度，empty返回一个bool类型，表示是否为空，时间复杂度皆为O（1）。</li>\n</ol>\n<p><del>其实所有STL容器都支持此操作</del>   </p>\n<ol start=\"2\">\n<li><p><strong>clear</strong><br>清空数组  </p>\n</li>\n<li><p><strong>迭代器</strong><br>可以看为STL容器的指针，可以用*解除引用。<br>一个保存<code>int</code>的<code>vector</code>的迭代器的声明方式为：<br><code>vector&lt;int&gt;::iterator it</code><br>it便为迭代器，可以与其它整数相加减</p>\n</li>\n<li><p><strong>begin&#x2F;end</strong> （左开右闭）<br>begin返回第一个元素，end返回最后一个元素的后一位（front和back等效）   </p>\n</li>\n<li><p><strong>push_back()和pop_back()</strong><br>push将元素插入尾部，pop将元素从头部移除</p>\n</li>\n</ol>\n<h3 id=\"queue队列\"><a href=\"#queue队列\" class=\"headerlink\" title=\"queue队列\"></a><strong>queue队列</strong></h3><p>头文件为<code>&lt;queue&gt;</code>   </p>\n<ol>\n<li>循环队列<code>queue</code><br><code>push</code><br><code>pop</code><br><code>front</code><br><code>back</code><br>(大同小异所以不再详解)   </li>\n<li>优先队列<code>priority_queue</code><br><code>push</code><br><code>pop</code><br><code>top</code> (查询堆顶元素&#x2F;默认为最大值)</li>\n</ol>\n<h3 id=\"细谈优先队列\"><a href=\"#细谈优先队列\" class=\"headerlink\" title=\"细谈优先队列\"></a>细谈优先队列</h3><p>优先队列有三个参数，分别是要储存的数据类型，所使用容器（默认为<code>vector</code>），优先级判定（默认大根堆）。</p>\n<p>优先队列的优先级也是可以和<code>sort</code>一样改变的！</p>\n<p>只要在结构体中重载&lt;运算符即可。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">queue&lt;<span class=\"type\">int</span>&gt; q;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">rec</span>&#123;…&#125;; queue&lt;rec&gt; q;                        <span class=\"comment\">//结构体rec中必须定义小于号</span></span><br><span class=\"line\">priority_queue&lt;<span class=\"type\">int</span>&gt; q;                              <span class=\"comment\">// 大根堆</span></span><br><span class=\"line\">priority_queue&lt;<span class=\"type\">int</span>, vector&lt;<span class=\"type\">int</span>&gt;, greater&lt;<span class=\"type\">int</span>&gt;&gt; q;   <span class=\"comment\">// 小根堆，greater是已编写好的。</span></span><br><span class=\"line\">priority_queue&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;q;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"栈stack\"><a href=\"#栈stack\" class=\"headerlink\" title=\"栈stack\"></a><strong>栈stack</strong></h3><p> 头文件为<code>&lt;stack&gt;</code><br> <code>push</code><br> <code>pop</code></p>\n<p> 无话可说  </p>\n<h3 id=\"双端队列deque\"><a href=\"#双端队列deque\" class=\"headerlink\" title=\"双端队列deque\"></a><strong>双端队列deque</strong></h3><p> 头文件与queue相同 </p>\n<p> []              &#x2F;&#x2F; 随机访问<br><code>begin/end</code>       &#x2F;&#x2F; 返回deque的头&#x2F;尾迭代器<br><code>front/back</code>      &#x2F;&#x2F; 队头&#x2F;队尾元素<br><code>push_back</code>       &#x2F;&#x2F; 从队尾入队<br><code>push_front</code>      &#x2F;&#x2F; 从队头入队<br><code>pop_back</code>        &#x2F;&#x2F; 从队尾出队<br><code>pop_front</code>       &#x2F;&#x2F; 从队头出队<br><code>clea</code>r           &#x2F;&#x2F; 清空队列  </p>\n<h3 id=\"集合set\"><a href=\"#集合set\" class=\"headerlink\" title=\"集合set\"></a><strong>集合set</strong></h3><p>头文件为<code>&lt;set&gt;</code></p>\n<h4 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a><code>set</code></h4><p>声明</p>\n<p>  <code>set&lt;int&gt; s;</code><br><code>struct rec&#123;…&#125;; set&lt;rec&gt; s;</code>  &#x2F;&#x2F; 结构体rec中必须定义小于号<br><code>multiset&lt;double&gt; s;</code></p>\n<ol>\n<li><code>size/empty/clear</code><br>与vector类似，不在讲</li>\n<li><code>insert</code><br><code>insert(x)</code>将x插入到set中</li>\n<li><code>begin/end</code><br>返回集合的首、尾迭代器，时间复杂度均为 O(1)O(1)。<br><code>s.begin()</code>是指向集合中最小元素的迭代器。<br><code>s.end()</code>是指向集合中最大元素的下一个位置的迭代器。换言之，就像<code>vector</code>一样，是一个“前闭后开”的形式。因此– <code>s.end()</code>是指向集合中最大元素的迭代器。</li>\n<li><code>find</code><br><code>s.find(x)</code>在集合s中查找等于x的元素，并返回指向该元素的迭代器。若不存在，则返回<code>s.end()</code>。时间复杂度为 O(logn)  </li>\n<li>count<br>s.count(x)返回集合s中等于x的元素个数，时间复杂度为 O(k+logn)O(k+logn)，其中 kk 为元素x的个数。</li>\n</ol>\n<h3 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a><strong>map</strong></h3><p>头文件为<code>&lt;map&gt;</code></p>\n<p>map容器是一个键值对key-value的映射，其内部实现是一棵以key为关键码的红黑树。Map的key和value可以是任意类型，其中key必须定义小于号运算符。</p>\n<p><code>map&lt;key_type, value_type&gt; name;</code></p>\n<ol>\n<li><p><code>size/empty/clear/begin/end</code><br>均与set类似。</p>\n</li>\n<li><p><code>insert/erase</code><br>与set类似，但其参数均是pair&lt;key_type, value_type&gt;。</p>\n</li>\n<li><p><code>find</code><br>h.find(x)在变量名为h的map中查找key为x的二元组。</p>\n</li>\n<li><p><code>[]</code>操作符<br>h[key]返回key映射的value的引用，时间复杂度为 O(logn)O(logn)。</p>\n</li>\n</ol>\n<p>[]操作符是map最吸引人的地方。我们可以很方便地通过h[key]来得到key对应的value，还可以对h[key]进行赋值操作，改变key对应的value。</p>"},{"title":"encrypt","date":"2023-05-27T05:30:34.000Z","description":"密码是encrypt","password":"encrypt","message":"密码是encrypt.","_content":"要加密就写 password: \n在文章头下面写这些东西(看着加)\nabstract: 文章已加密\nmessage: 请输入密码\nwrong_pass_message: 密码错误\nwrong_hash_message: 文章校验失败","source":"_posts/encrypt.md","raw":"---\ntitle: encrypt\ndate: 2023-05-27 13:30:34\ntags: encrypt\ncategories: hexo\ndescription: 密码是encrypt\npassword: encrypt\nmessage: 密码是encrypt.\n---\n要加密就写 password: \n在文章头下面写这些东西(看着加)\nabstract: 文章已加密\nmessage: 请输入密码\nwrong_pass_message: 密码错误\nwrong_hash_message: 文章校验失败","slug":"encrypt","published":1,"updated":"2023-06-16T11:51:46.418Z","_id":"cliyh57100003gghgc15j6rtc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>要加密就写 password:<br>在文章头下面写这些东西(看着加)<br>abstract: 文章已加密<br>message: 请输入密码<br>wrong_pass_message: 密码错误<br>wrong_hash_message: 文章校验失败</p>\n","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<p>要加密就写 password:<br>在文章头下面写这些东西(看着加)<br>abstract: 文章已加密<br>message: 请输入密码<br>wrong_pass_message: 密码错误<br>wrong_hash_message: 文章校验失败</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntags: hello2\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-06-16T11:13:57.389Z","updated":"2023-05-27T04:50:38.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliyh57120006gghg5eur57z2","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"hello","date":"2023-05-25T11:24:25.000Z","_content":"a\naa\na\na\na\n\na\na\na\na\na\n\na\n","source":"_posts/hello.md","raw":"---\ntitle: hello\ndate: 2023-05-25 19:24:25\ntags: hello\n---\na\naa\na\na\na\n\na\na\na\na\na\n\na\n","slug":"hello","published":1,"updated":"2023-05-27T04:50:30.094Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliyh57130008gghg2i9j1mlb","content":"<p>a<br>aa<br>a<br>a<br>a</p>\n<p>a<br>a<br>a<br>a<br>a</p>\n<p>a</p>\n","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<p>a<br>aa<br>a<br>a<br>a</p>\n<p>a<br>a<br>a<br>a<br>a</p>\n<p>a</p>\n"},{"title":"前缀和与差分","_content":"其实并不是很难的东西，只是怕又忘记了所以才写博客。\n\n## 前缀和 \n\n构造``数组b``为输入``数组a``的前缀和，输出一段数列的和时时间复杂度为O（1），适合大量的输出。\n\n### 一维前缀和\n\n\n***[模板题](https://www.acwing.com/problem/content/797/)***\n\n显然无什么好说的\n\n\n在输入时``b[i] = b[i - 1] + a[i]``以构造***前缀和数组***即可  \n\n代码如下\n\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int lxb = 1e5 + 10;\nint q[lxb];\nint n, m;\nint main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i ++)\n\t{\n\t\tint x; \n\t\tcin >> x;\n\t\tq[i] = q[i - 1] + x;\n\t}\n\tfor(int i = 1; i <= m; i ++)\n\t{\n\t\tint l, r;\n\t\tcin >> l >> r;\n\t\tcout << q[r] - q[l - 1] << endl;\n\t}\n\n\treturn 0;\n}\n```\n\n### 二维前缀和\n\n***[模板题](https://www.acwing.com/problem/content/798/)***\n\n其实本质上差别不大\n\n简单推理便可以得到x1,y1,x2,y2区间查询的和为\n\n``s[x2][y2] - s[x1 - 1][y2] - s[x2][y1 - 1] + s[x1 - 1][y1 - 1]``\n\n代码如下\n~~~c++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int lxb = 1010;\nint a[lxb][lxb],s[lxb][lxb];\nint n, m, q;\n\nint main()\n{\n\tcin >> n >> m >> q;\n\tfor(int i = 1; i <= n; i ++)\n\t{\n\t\tfor(int j = 1; j  <= m; j ++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\ts[i][j] = s[i][j - 1] + s[i - 1][j] - s[i - 1][j - 1] + a[i][j];\n\n\t\t}\n\t}\n\twhile(q --)\n\t{\n\t\tint x1, y1, x2, y2;\n\t\tscanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n\t\tint ans = s[x2][y2] - s[x1 -1][y2] - s[x2][y1 -1] + s[x1 -1][y1 -1];\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}\n~~~\n\n## 差分\n\n差分便是构造的``b数组``的前缀和为``输入数组a``的前缀和，改变一个区间数据的时间复杂度为O（1），适合频繁插入数据。\n\n自己一般会理解为反向前缀和\n\n### 一维差分\n\n[模板题](https://www.acwing.com/problem/content/799/)\n\n无话可说\n\n~~~c++\n#include <iostream>\n\nusing namespace std;\n\nconst int N = 100010;\n\nint n, m;\nint a[N], b[N];\n\nvoid insert(int l, int r, int c)\n{\n    b[l] += c;\n    b[r + 1] -= c;\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i ++ ) scanf(\"%d\", &a[i]);\n\n    for (int i = 1; i <= n; i ++ ) insert(i, i, a[i]);\n\n    while (m -- )\n    {\n        int l, r, c;\n        scanf(\"%d%d%d\", &l, &r, &c);\n        insert(l, r, c);\n    }\n\n    for (int i = 1; i <= n; i ++ ) b[i] += b[i - 1];\n\n    for (int i = 1; i <= n; i ++ ) printf(\"%d \", b[i]);\n\n    return 0;\n}\n\n~~~\n\n### 二维差分\n\n其实也是一样的道理，简单推理便可以得到\n\n若想使``x1,y1,x2,y2``区间的数都加上加上一个c\n\n只需要对``b数组``做以下操作\n\n***b[x1][y1] += c***\n\n***b[x1][y2 + 1] -= c***\n\n***b[x2 + 1][y1], -= c***\n\n***b[x2 + 1][y2 + 1] += c***   \n\n\n[模板题](https://www.acwing.com/activity/content/problem/content/832/)\n\n代码如下\n\n~~~c++\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int lxb = 1e3 + 10;\n\nint n, m, q;\n\nint a[lxb][lxb], b[lxb][lxb];\n\nvoid insert (int x1, int y1, int x2, int y2, int c)\n{\n    b[x1][y1] += c;\n    b[x1][y2 + 1] -= c;\n    b[x2 + 1][y1] -= c;\n    b[x2 +1][y2 + 1] += c;\n}\n\nint main()\n{\ncin >> n >> m >> q;\n\nfor(int i = 1; i <= n; i ++)\n    for(int j = 1; j <= m; j ++)\n    {\n        scanf(\"%d\",&a[i][j]);\n    }\n    for(int i = 1; i <= n; i ++)\n        for(int j = 1; j <= m; j ++)\n        {\n            insert(i,j,i,j,a[i][j]);\n        }\n\nwhile(q --)\n{\n    int x1,y1,x2,y2,c;\n    cin >> x1 >> y1 >> x2 >> y2 >> c;\n    insert(x1,y1,x2,y2,c);\n}\nfor(int i = 1; i <= n; i ++)\n{\n    for(int j = 1; j <= m; j ++)\n    {\n        b[i][j] += b[i - 1][j] + b[i][j - 1] - b[i -1][j - 1];\n    }\n}\n\nfor(int i = 1; i <= n; i ++)\n    {\n    for(int j = 1; j <= m; j ++)\n        {\n            printf(\"%d \",b[i][j]);\n        }\n    puts(\" \");\n    }\n    return 0;\n}\n\n\n~~~\n","source":"_posts/前缀和与差分.md","raw":"---\ntitle: 前缀和与差分\ntags: 算法\n---\n其实并不是很难的东西，只是怕又忘记了所以才写博客。\n\n## 前缀和 \n\n构造``数组b``为输入``数组a``的前缀和，输出一段数列的和时时间复杂度为O（1），适合大量的输出。\n\n### 一维前缀和\n\n\n***[模板题](https://www.acwing.com/problem/content/797/)***\n\n显然无什么好说的\n\n\n在输入时``b[i] = b[i - 1] + a[i]``以构造***前缀和数组***即可  \n\n代码如下\n\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int lxb = 1e5 + 10;\nint q[lxb];\nint n, m;\nint main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i ++)\n\t{\n\t\tint x; \n\t\tcin >> x;\n\t\tq[i] = q[i - 1] + x;\n\t}\n\tfor(int i = 1; i <= m; i ++)\n\t{\n\t\tint l, r;\n\t\tcin >> l >> r;\n\t\tcout << q[r] - q[l - 1] << endl;\n\t}\n\n\treturn 0;\n}\n```\n\n### 二维前缀和\n\n***[模板题](https://www.acwing.com/problem/content/798/)***\n\n其实本质上差别不大\n\n简单推理便可以得到x1,y1,x2,y2区间查询的和为\n\n``s[x2][y2] - s[x1 - 1][y2] - s[x2][y1 - 1] + s[x1 - 1][y1 - 1]``\n\n代码如下\n~~~c++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int lxb = 1010;\nint a[lxb][lxb],s[lxb][lxb];\nint n, m, q;\n\nint main()\n{\n\tcin >> n >> m >> q;\n\tfor(int i = 1; i <= n; i ++)\n\t{\n\t\tfor(int j = 1; j  <= m; j ++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\ts[i][j] = s[i][j - 1] + s[i - 1][j] - s[i - 1][j - 1] + a[i][j];\n\n\t\t}\n\t}\n\twhile(q --)\n\t{\n\t\tint x1, y1, x2, y2;\n\t\tscanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n\t\tint ans = s[x2][y2] - s[x1 -1][y2] - s[x2][y1 -1] + s[x1 -1][y1 -1];\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}\n~~~\n\n## 差分\n\n差分便是构造的``b数组``的前缀和为``输入数组a``的前缀和，改变一个区间数据的时间复杂度为O（1），适合频繁插入数据。\n\n自己一般会理解为反向前缀和\n\n### 一维差分\n\n[模板题](https://www.acwing.com/problem/content/799/)\n\n无话可说\n\n~~~c++\n#include <iostream>\n\nusing namespace std;\n\nconst int N = 100010;\n\nint n, m;\nint a[N], b[N];\n\nvoid insert(int l, int r, int c)\n{\n    b[l] += c;\n    b[r + 1] -= c;\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i ++ ) scanf(\"%d\", &a[i]);\n\n    for (int i = 1; i <= n; i ++ ) insert(i, i, a[i]);\n\n    while (m -- )\n    {\n        int l, r, c;\n        scanf(\"%d%d%d\", &l, &r, &c);\n        insert(l, r, c);\n    }\n\n    for (int i = 1; i <= n; i ++ ) b[i] += b[i - 1];\n\n    for (int i = 1; i <= n; i ++ ) printf(\"%d \", b[i]);\n\n    return 0;\n}\n\n~~~\n\n### 二维差分\n\n其实也是一样的道理，简单推理便可以得到\n\n若想使``x1,y1,x2,y2``区间的数都加上加上一个c\n\n只需要对``b数组``做以下操作\n\n***b[x1][y1] += c***\n\n***b[x1][y2 + 1] -= c***\n\n***b[x2 + 1][y1], -= c***\n\n***b[x2 + 1][y2 + 1] += c***   \n\n\n[模板题](https://www.acwing.com/activity/content/problem/content/832/)\n\n代码如下\n\n~~~c++\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int lxb = 1e3 + 10;\n\nint n, m, q;\n\nint a[lxb][lxb], b[lxb][lxb];\n\nvoid insert (int x1, int y1, int x2, int y2, int c)\n{\n    b[x1][y1] += c;\n    b[x1][y2 + 1] -= c;\n    b[x2 + 1][y1] -= c;\n    b[x2 +1][y2 + 1] += c;\n}\n\nint main()\n{\ncin >> n >> m >> q;\n\nfor(int i = 1; i <= n; i ++)\n    for(int j = 1; j <= m; j ++)\n    {\n        scanf(\"%d\",&a[i][j]);\n    }\n    for(int i = 1; i <= n; i ++)\n        for(int j = 1; j <= m; j ++)\n        {\n            insert(i,j,i,j,a[i][j]);\n        }\n\nwhile(q --)\n{\n    int x1,y1,x2,y2,c;\n    cin >> x1 >> y1 >> x2 >> y2 >> c;\n    insert(x1,y1,x2,y2,c);\n}\nfor(int i = 1; i <= n; i ++)\n{\n    for(int j = 1; j <= m; j ++)\n    {\n        b[i][j] += b[i - 1][j] + b[i][j - 1] - b[i -1][j - 1];\n    }\n}\n\nfor(int i = 1; i <= n; i ++)\n    {\n    for(int j = 1; j <= m; j ++)\n        {\n            printf(\"%d \",b[i][j]);\n        }\n    puts(\" \");\n    }\n    return 0;\n}\n\n\n~~~\n","slug":"前缀和与差分","published":1,"date":"2023-06-16T11:16:02.334Z","updated":"2023-05-27T05:52:41.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliyh5714000agghggx4l10qq","content":"<p>其实并不是很难的东西，只是怕又忘记了所以才写博客。</p>\n<h2 id=\"前缀和\"><a href=\"#前缀和\" class=\"headerlink\" title=\"前缀和\"></a>前缀和</h2><p>构造<code>数组b</code>为输入<code>数组a</code>的前缀和，输出一段数列的和时时间复杂度为O（1），适合大量的输出。</p>\n<h3 id=\"一维前缀和\"><a href=\"#一维前缀和\" class=\"headerlink\" title=\"一维前缀和\"></a>一维前缀和</h3><p><em><strong><a href=\"https://www.acwing.com/problem/content/797/\">模板题</a></strong></em></p>\n<p>显然无什么好说的</p>\n<p>在输入时<code>b[i] = b[i - 1] + a[i]</code>以构造<em><strong>前缀和数组</strong></em>即可  </p>\n<p>代码如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> lxb = <span class=\"number\">1e5</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> q[lxb];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x; </span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\tq[i] = q[i - <span class=\"number\">1</span>] + x;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i ++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> l, r;</span><br><span class=\"line\">\t\tcin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">\t\tcout &lt;&lt; q[r] - q[l - <span class=\"number\">1</span>] &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二维前缀和\"><a href=\"#二维前缀和\" class=\"headerlink\" title=\"二维前缀和\"></a>二维前缀和</h3><p><em><strong><a href=\"https://www.acwing.com/problem/content/798/\">模板题</a></strong></em></p>\n<p>其实本质上差别不大</p>\n<p>简单推理便可以得到x1,y1,x2,y2区间查询的和为</p>\n<p><code>s[x2][y2] - s[x1 - 1][y2] - s[x2][y1 - 1] + s[x1 - 1][y1 - 1]</code></p>\n<p>代码如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> lxb = <span class=\"number\">1010</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> a[lxb][lxb],s[lxb][lxb];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, q;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j  &lt;= m; j ++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class=\"line\">\t\t\ts[i][j] = s[i][j - <span class=\"number\">1</span>] + s[i - <span class=\"number\">1</span>][j] - s[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] + a[i][j];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q --)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x1, y1, x2, y2;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d%d&quot;</span>, &amp;x1, &amp;y1, &amp;x2, &amp;y2);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ans = s[x2][y2] - s[x1 <span class=\"number\">-1</span>][y2] - s[x2][y1 <span class=\"number\">-1</span>] + s[x1 <span class=\"number\">-1</span>][y1 <span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\tcout &lt;&lt; ans &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"差分\"><a href=\"#差分\" class=\"headerlink\" title=\"差分\"></a>差分</h2><p>差分便是构造的<code>b数组</code>的前缀和为<code>输入数组a</code>的前缀和，改变一个区间数据的时间复杂度为O（1），适合频繁插入数据。</p>\n<p>自己一般会理解为反向前缀和</p>\n<h3 id=\"一维差分\"><a href=\"#一维差分\" class=\"headerlink\" title=\"一维差分\"></a>一维差分</h3><p><a href=\"https://www.acwing.com/problem/content/799/\">模板题</a></p>\n<p>无话可说</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100010</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> a[N], b[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    b[l] += c;</span><br><span class=\"line\">    b[r + <span class=\"number\">1</span>] -= c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ ) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ ) <span class=\"built_in\">insert</span>(i, i, a[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (m -- )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> l, r, c;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>, &amp;l, &amp;r, &amp;c);</span><br><span class=\"line\">        <span class=\"built_in\">insert</span>(l, r, c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ ) b[i] += b[i - <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ ) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, b[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二维差分\"><a href=\"#二维差分\" class=\"headerlink\" title=\"二维差分\"></a>二维差分</h3><p>其实也是一样的道理，简单推理便可以得到</p>\n<p>若想使<code>x1,y1,x2,y2</code>区间的数都加上加上一个c</p>\n<p>只需要对<code>b数组</code>做以下操作</p>\n<p><em><strong>b[x1][y1] +&#x3D; c</strong></em></p>\n<p><em><strong>b[x1][y2 + 1] -&#x3D; c</strong></em></p>\n<p><em><strong>b[x2 + 1][y1], -&#x3D; c</strong></em></p>\n<p><em><strong>b[x2 + 1][y2 + 1] +&#x3D; c</strong></em>   </p>\n<p><a href=\"https://www.acwing.com/activity/content/problem/content/832/\">模板题</a></p>\n<p>代码如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> lxb = <span class=\"number\">1e3</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m, q;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> a[lxb][lxb], b[lxb][lxb];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insert</span> <span class=\"params\">(<span class=\"type\">int</span> x1, <span class=\"type\">int</span> y1, <span class=\"type\">int</span> x2, <span class=\"type\">int</span> y2, <span class=\"type\">int</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    b[x1][y1] += c;</span><br><span class=\"line\">    b[x1][y2 + <span class=\"number\">1</span>] -= c;</span><br><span class=\"line\">    b[x2 + <span class=\"number\">1</span>][y1] -= c;</span><br><span class=\"line\">    b[x2 +<span class=\"number\">1</span>][y2 + <span class=\"number\">1</span>] += c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j ++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i,j,i,j,a[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span>(q --)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x1,y1,x2,y2,c;</span><br><span class=\"line\">    cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2 &gt;&gt; c;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(x1,y1,x2,y2,c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        b[i][j] += b[i - <span class=\"number\">1</span>][j] + b[i][j - <span class=\"number\">1</span>] - b[i <span class=\"number\">-1</span>][j - <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j ++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,b[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<p>其实并不是很难的东西，只是怕又忘记了所以才写博客。</p>\n<h2 id=\"前缀和\"><a href=\"#前缀和\" class=\"headerlink\" title=\"前缀和\"></a>前缀和</h2><p>构造<code>数组b</code>为输入<code>数组a</code>的前缀和，输出一段数列的和时时间复杂度为O（1），适合大量的输出。</p>\n<h3 id=\"一维前缀和\"><a href=\"#一维前缀和\" class=\"headerlink\" title=\"一维前缀和\"></a>一维前缀和</h3><p><em><strong><a href=\"https://www.acwing.com/problem/content/797/\">模板题</a></strong></em></p>\n<p>显然无什么好说的</p>\n<p>在输入时<code>b[i] = b[i - 1] + a[i]</code>以构造<em><strong>前缀和数组</strong></em>即可  </p>\n<p>代码如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> lxb = <span class=\"number\">1e5</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> q[lxb];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x; </span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\tq[i] = q[i - <span class=\"number\">1</span>] + x;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i ++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> l, r;</span><br><span class=\"line\">\t\tcin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">\t\tcout &lt;&lt; q[r] - q[l - <span class=\"number\">1</span>] &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二维前缀和\"><a href=\"#二维前缀和\" class=\"headerlink\" title=\"二维前缀和\"></a>二维前缀和</h3><p><em><strong><a href=\"https://www.acwing.com/problem/content/798/\">模板题</a></strong></em></p>\n<p>其实本质上差别不大</p>\n<p>简单推理便可以得到x1,y1,x2,y2区间查询的和为</p>\n<p><code>s[x2][y2] - s[x1 - 1][y2] - s[x2][y1 - 1] + s[x1 - 1][y1 - 1]</code></p>\n<p>代码如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> lxb = <span class=\"number\">1010</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> a[lxb][lxb],s[lxb][lxb];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, q;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j  &lt;= m; j ++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class=\"line\">\t\t\ts[i][j] = s[i][j - <span class=\"number\">1</span>] + s[i - <span class=\"number\">1</span>][j] - s[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] + a[i][j];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q --)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x1, y1, x2, y2;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d%d&quot;</span>, &amp;x1, &amp;y1, &amp;x2, &amp;y2);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ans = s[x2][y2] - s[x1 <span class=\"number\">-1</span>][y2] - s[x2][y1 <span class=\"number\">-1</span>] + s[x1 <span class=\"number\">-1</span>][y1 <span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\tcout &lt;&lt; ans &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"差分\"><a href=\"#差分\" class=\"headerlink\" title=\"差分\"></a>差分</h2><p>差分便是构造的<code>b数组</code>的前缀和为<code>输入数组a</code>的前缀和，改变一个区间数据的时间复杂度为O（1），适合频繁插入数据。</p>\n<p>自己一般会理解为反向前缀和</p>\n<h3 id=\"一维差分\"><a href=\"#一维差分\" class=\"headerlink\" title=\"一维差分\"></a>一维差分</h3><p><a href=\"https://www.acwing.com/problem/content/799/\">模板题</a></p>\n<p>无话可说</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100010</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> a[N], b[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    b[l] += c;</span><br><span class=\"line\">    b[r + <span class=\"number\">1</span>] -= c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ ) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ ) <span class=\"built_in\">insert</span>(i, i, a[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (m -- )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> l, r, c;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>, &amp;l, &amp;r, &amp;c);</span><br><span class=\"line\">        <span class=\"built_in\">insert</span>(l, r, c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ ) b[i] += b[i - <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ ) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, b[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二维差分\"><a href=\"#二维差分\" class=\"headerlink\" title=\"二维差分\"></a>二维差分</h3><p>其实也是一样的道理，简单推理便可以得到</p>\n<p>若想使<code>x1,y1,x2,y2</code>区间的数都加上加上一个c</p>\n<p>只需要对<code>b数组</code>做以下操作</p>\n<p><em><strong>b[x1][y1] +&#x3D; c</strong></em></p>\n<p><em><strong>b[x1][y2 + 1] -&#x3D; c</strong></em></p>\n<p><em><strong>b[x2 + 1][y1], -&#x3D; c</strong></em></p>\n<p><em><strong>b[x2 + 1][y2 + 1] +&#x3D; c</strong></em>   </p>\n<p><a href=\"https://www.acwing.com/activity/content/problem/content/832/\">模板题</a></p>\n<p>代码如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> lxb = <span class=\"number\">1e3</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m, q;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> a[lxb][lxb], b[lxb][lxb];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insert</span> <span class=\"params\">(<span class=\"type\">int</span> x1, <span class=\"type\">int</span> y1, <span class=\"type\">int</span> x2, <span class=\"type\">int</span> y2, <span class=\"type\">int</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    b[x1][y1] += c;</span><br><span class=\"line\">    b[x1][y2 + <span class=\"number\">1</span>] -= c;</span><br><span class=\"line\">    b[x2 + <span class=\"number\">1</span>][y1] -= c;</span><br><span class=\"line\">    b[x2 +<span class=\"number\">1</span>][y2 + <span class=\"number\">1</span>] += c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j ++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>(i,j,i,j,a[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span>(q --)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x1,y1,x2,y2,c;</span><br><span class=\"line\">    cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2 &gt;&gt; c;</span><br><span class=\"line\">    <span class=\"built_in\">insert</span>(x1,y1,x2,y2,c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        b[i][j] += b[i - <span class=\"number\">1</span>][j] + b[i][j - <span class=\"number\">1</span>] - b[i <span class=\"number\">-1</span>][j - <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j ++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,b[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"生日！！！","date":"2023-06-01T09:30:12.000Z","_content":"\n\n# 祝我生日快乐\n\n下图是lzh的生日礼物\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/97oopaal.png)\n\n\n另外提醒梅林和超级无敌暴龙武士不要忘了送我游戏↘\n","source":"_posts/生日.md","raw":"---\ntitle: 生日！！！\ndate: 2023-06-01 17:30:12\ntags: 日常\n---\n\n\n# 祝我生日快乐\n\n下图是lzh的生日礼物\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/97oopaal.png)\n\n\n另外提醒梅林和超级无敌暴龙武士不要忘了送我游戏↘\n","slug":"生日","published":1,"updated":"2023-06-16T11:55:01.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliyij7480002pwhg9r15b22y","content":"<h1 id=\"祝我生日快乐\"><a href=\"#祝我生日快乐\" class=\"headerlink\" title=\"祝我生日快乐\"></a>祝我生日快乐</h1><p>下图是lzh的生日礼物</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/97oopaal.png\"></p>\n<p>另外提醒梅林和超级无敌暴龙武士不要忘了送我游戏↘</p>\n","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<h1 id=\"祝我生日快乐\"><a href=\"#祝我生日快乐\" class=\"headerlink\" title=\"祝我生日快乐\"></a>祝我生日快乐</h1><p>下图是lzh的生日礼物</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/97oopaal.png\"></p>\n<p>另外提醒梅林和超级无敌暴龙武士不要忘了送我游戏↘</p>\n"},{"title":"圣经","date":"2023-05-25T11:24:25.000Z","description":"无话可说高精度","_content":"# 无话可说高精度   \n__高精加__\n\n~~~c++\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 1e6 + 10;\n\nvector <int> add(vector<int> &A,vector<int> &B)\n{\n    vector <int> C;\n\n    int t = 0;\n    for(int i = 0; i < A.size() || i < B.size(); i ++)\n    {\n        if(i < A.size()) t += A[i];\n        if(i < B.size()) t += B[i];\n        C.push_back(t%10);\n        t /= 10;\n    }\n    if(t) C.push_back(1);\n    return C;\n}\n\n\n\nint main()\n{\nstring a,b;\nvector <int> A, B;\n\ncin >> a >> b;\nfor(int i = a.size() - 1; i>= 0; i -- )  A.push_back(a[i] - '0');\nfor(int i = b.size() - 1; i>= 0; i -- )  B.push_back(b[i] - '0');\n\n\nauto C = add(A,B);\n\nfor(int i = C.size()-1;i >= 0; i --) printf(\"%d\",C[i]);\n    return 0;\n}\n\n ~~~\n \n ---\n __高精度减__\n \n ~~~c++\n #include <iostream>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 1e6 + 10;\n\nbool cmp(vector<int> &A,vector<int> &B)\n{\n    if(A.size() != B.size()) return A.size() > B.size();\n\n    for(int i = A.size() ; i >= 0; i --)\n        if(A[i] != B[i])\n            return A[i] > B[i];\n    return true;\n    \n}\n\nvector <int> sub(vector<int> &A,vector<int> &B)\n{\n    vector <int> C;\nint t = 0;\n    for(int i = 0; i < A.size(); i ++)\n    {\n        t = A[i] - t;\n        if(i < B.size()) t -= B[i];\n        C.push_back((t + 10) % 10);\n        if(t < 0) t = 1;\n        else t = 0;\n    }\n\n    while(C.size() > 1 && C.back() == 0) C.pop_back();\n\n    return C;\n}\n\n\n\nint main()\n{\nstring a,b;\nvector <int> A, B;\n\ncin >> a >> b;\nfor(int i = a.size() - 1; i>= 0; i -- )  A.push_back(a[i] - '0');\nfor(int i = b.size() - 1; i>= 0; i -- )  B.push_back(b[i] - '0');\n\nif(cmp(A,B))\n{\n    auto C = sub(A,B);\n    for(int i = C.size()-1; i >= 0; i --) printf(\"%d\",C[i]);\n}\nelse\n{\n    auto C = sub(A,B);\n\n    printf(\"-\");\n    for(int i = C.size()-1;i >= 0; i --) printf(\"%d\",C[i]);\n}\n\n\n\n    return 0;\n}\n~~~\n\n__高精乘单精__    \n~~~c++\n// C = A * b, A >= 0, b >= 0\nvector<int> mul(vector<int> &A, int b)\n{\n    vector<int> C;\n\n    int t = 0;\n    for (int i = 0; i < A.size() || t; i ++ )\n    {\n        if (i < A.size()) t += A[i] * b;\n        C.push_back(t % 10);\n        t /= 10;\n    }\n\n    while (C.size() > 1 && C.back() == 0) C.pop_back();\n\n    return C;\n}\n\n\n~~~\n\n\n__高精除单精__\n\n~~~c++\n// A / b = C ... r, A >= 0, b > 0\nvector<int> div(vector<int> &A, int b, int &r)\n{\n    vector<int> C;\n    r = 0;\n    for (int i = A.size() - 1; i >= 0; i -- )\n    {\n        r = r * 10 + A[i];\n        C.push_back(r / b);\n        r %= b;\n    }\n    reverse(C.begin(), C.end());\n    while (C.size() > 1 && C.back() == 0) C.pop_back();\n    return C;\n}\n\n\n~~~\n","source":"_posts/圣经.md","raw":"---\ntitle: 圣经\ndate: 2023-05-25 19:24:25\ntags: 圣经\ndescription: 无话可说高精度\n---\n# 无话可说高精度   \n__高精加__\n\n~~~c++\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 1e6 + 10;\n\nvector <int> add(vector<int> &A,vector<int> &B)\n{\n    vector <int> C;\n\n    int t = 0;\n    for(int i = 0; i < A.size() || i < B.size(); i ++)\n    {\n        if(i < A.size()) t += A[i];\n        if(i < B.size()) t += B[i];\n        C.push_back(t%10);\n        t /= 10;\n    }\n    if(t) C.push_back(1);\n    return C;\n}\n\n\n\nint main()\n{\nstring a,b;\nvector <int> A, B;\n\ncin >> a >> b;\nfor(int i = a.size() - 1; i>= 0; i -- )  A.push_back(a[i] - '0');\nfor(int i = b.size() - 1; i>= 0; i -- )  B.push_back(b[i] - '0');\n\n\nauto C = add(A,B);\n\nfor(int i = C.size()-1;i >= 0; i --) printf(\"%d\",C[i]);\n    return 0;\n}\n\n ~~~\n \n ---\n __高精度减__\n \n ~~~c++\n #include <iostream>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 1e6 + 10;\n\nbool cmp(vector<int> &A,vector<int> &B)\n{\n    if(A.size() != B.size()) return A.size() > B.size();\n\n    for(int i = A.size() ; i >= 0; i --)\n        if(A[i] != B[i])\n            return A[i] > B[i];\n    return true;\n    \n}\n\nvector <int> sub(vector<int> &A,vector<int> &B)\n{\n    vector <int> C;\nint t = 0;\n    for(int i = 0; i < A.size(); i ++)\n    {\n        t = A[i] - t;\n        if(i < B.size()) t -= B[i];\n        C.push_back((t + 10) % 10);\n        if(t < 0) t = 1;\n        else t = 0;\n    }\n\n    while(C.size() > 1 && C.back() == 0) C.pop_back();\n\n    return C;\n}\n\n\n\nint main()\n{\nstring a,b;\nvector <int> A, B;\n\ncin >> a >> b;\nfor(int i = a.size() - 1; i>= 0; i -- )  A.push_back(a[i] - '0');\nfor(int i = b.size() - 1; i>= 0; i -- )  B.push_back(b[i] - '0');\n\nif(cmp(A,B))\n{\n    auto C = sub(A,B);\n    for(int i = C.size()-1; i >= 0; i --) printf(\"%d\",C[i]);\n}\nelse\n{\n    auto C = sub(A,B);\n\n    printf(\"-\");\n    for(int i = C.size()-1;i >= 0; i --) printf(\"%d\",C[i]);\n}\n\n\n\n    return 0;\n}\n~~~\n\n__高精乘单精__    \n~~~c++\n// C = A * b, A >= 0, b >= 0\nvector<int> mul(vector<int> &A, int b)\n{\n    vector<int> C;\n\n    int t = 0;\n    for (int i = 0; i < A.size() || t; i ++ )\n    {\n        if (i < A.size()) t += A[i] * b;\n        C.push_back(t % 10);\n        t /= 10;\n    }\n\n    while (C.size() > 1 && C.back() == 0) C.pop_back();\n\n    return C;\n}\n\n\n~~~\n\n\n__高精除单精__\n\n~~~c++\n// A / b = C ... r, A >= 0, b > 0\nvector<int> div(vector<int> &A, int b, int &r)\n{\n    vector<int> C;\n    r = 0;\n    for (int i = A.size() - 1; i >= 0; i -- )\n    {\n        r = r * 10 + A[i];\n        C.push_back(r / b);\n        r %= b;\n    }\n    reverse(C.begin(), C.end());\n    while (C.size() > 1 && C.back() == 0) C.pop_back();\n    return C;\n}\n\n\n~~~\n","slug":"圣经","published":1,"updated":"2023-06-16T11:55:16.366Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliyijh3a0005pwhgeb3o9niy","content":"<h1 id=\"无话可说高精度\"><a href=\"#无话可说高精度\" class=\"headerlink\" title=\"无话可说高精度\"></a>无话可说高精度</h1><p><strong>高精加</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e6</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">vector &lt;<span class=\"type\">int</span>&gt; <span class=\"built_in\">add</span>(vector&lt;<span class=\"type\">int</span>&gt; &amp;A,vector&lt;<span class=\"type\">int</span>&gt; &amp;B)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    vector &lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; A.<span class=\"built_in\">size</span>() || i &lt; B.<span class=\"built_in\">size</span>(); i ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; A.<span class=\"built_in\">size</span>()) t += A[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; B.<span class=\"built_in\">size</span>()) t += B[i];</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>(t%<span class=\"number\">10</span>);</span><br><span class=\"line\">        t /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(t) C.<span class=\"built_in\">push_back</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">string a,b;</span><br><span class=\"line\">vector &lt;<span class=\"type\">int</span>&gt; A, B;</span><br><span class=\"line\"></span><br><span class=\"line\">cin &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = a.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i&gt;= <span class=\"number\">0</span>; i -- )  A.<span class=\"built_in\">push_back</span>(a[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = b.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i&gt;= <span class=\"number\">0</span>; i -- )  B.<span class=\"built_in\">push_back</span>(b[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">auto</span> C = <span class=\"built_in\">add</span>(A,B);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = C.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>;i &gt;= <span class=\"number\">0</span>; i --) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,C[i]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<p> <strong>高精度减</strong></p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e6</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;A,vector&lt;<span class=\"type\">int</span>&gt; &amp;B)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(A.<span class=\"built_in\">size</span>() != B.<span class=\"built_in\">size</span>()) <span class=\"keyword\">return</span> A.<span class=\"built_in\">size</span>() &gt; B.<span class=\"built_in\">size</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = A.<span class=\"built_in\">size</span>() ; i &gt;= <span class=\"number\">0</span>; i --)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] != B[i])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> A[i] &gt; B[i];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vector &lt;<span class=\"type\">int</span>&gt; <span class=\"built_in\">sub</span>(vector&lt;<span class=\"type\">int</span>&gt; &amp;A,vector&lt;<span class=\"type\">int</span>&gt; &amp;B)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    vector &lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\"><span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; A.<span class=\"built_in\">size</span>(); i ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        t = A[i] - t;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; B.<span class=\"built_in\">size</span>()) t -= B[i];</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>((t + <span class=\"number\">10</span>) % <span class=\"number\">10</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(t &lt; <span class=\"number\">0</span>) t = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(C.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span> &amp;&amp; C.<span class=\"built_in\">back</span>() == <span class=\"number\">0</span>) C.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">string a,b;</span><br><span class=\"line\">vector &lt;<span class=\"type\">int</span>&gt; A, B;</span><br><span class=\"line\"></span><br><span class=\"line\">cin &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = a.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i&gt;= <span class=\"number\">0</span>; i -- )  A.<span class=\"built_in\">push_back</span>(a[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = b.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i&gt;= <span class=\"number\">0</span>; i -- )  B.<span class=\"built_in\">push_back</span>(b[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">cmp</span>(A,B))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> C = <span class=\"built_in\">sub</span>(A,B);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = C.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>; i &gt;= <span class=\"number\">0</span>; i --) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,C[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> C = <span class=\"built_in\">sub</span>(A,B);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = C.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>;i &gt;= <span class=\"number\">0</span>; i --) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,C[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>高精乘单精</strong>    </p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// C = A * b, A &gt;= 0, b &gt;= 0</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">mul</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;A, <span class=\"type\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; A.<span class=\"built_in\">size</span>() || t; i ++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; A.<span class=\"built_in\">size</span>()) t += A[i] * b;</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>(t % <span class=\"number\">10</span>);</span><br><span class=\"line\">        t /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (C.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span> &amp;&amp; C.<span class=\"built_in\">back</span>() == <span class=\"number\">0</span>) C.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p><strong>高精除单精</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// A / b = C ... r, A &gt;= 0, b &gt; 0</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">div</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;A, <span class=\"type\">int</span> b, <span class=\"type\">int</span> &amp;r)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\">    r = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = A.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i -- )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        r = r * <span class=\"number\">10</span> + A[i];</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>(r / b);</span><br><span class=\"line\">        r %= b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">reverse</span>(C.<span class=\"built_in\">begin</span>(), C.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (C.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span> &amp;&amp; C.<span class=\"built_in\">back</span>() == <span class=\"number\">0</span>) C.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<h1 id=\"无话可说高精度\"><a href=\"#无话可说高精度\" class=\"headerlink\" title=\"无话可说高精度\"></a>无话可说高精度</h1><p><strong>高精加</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e6</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">vector &lt;<span class=\"type\">int</span>&gt; <span class=\"built_in\">add</span>(vector&lt;<span class=\"type\">int</span>&gt; &amp;A,vector&lt;<span class=\"type\">int</span>&gt; &amp;B)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    vector &lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; A.<span class=\"built_in\">size</span>() || i &lt; B.<span class=\"built_in\">size</span>(); i ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; A.<span class=\"built_in\">size</span>()) t += A[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; B.<span class=\"built_in\">size</span>()) t += B[i];</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>(t%<span class=\"number\">10</span>);</span><br><span class=\"line\">        t /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(t) C.<span class=\"built_in\">push_back</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">string a,b;</span><br><span class=\"line\">vector &lt;<span class=\"type\">int</span>&gt; A, B;</span><br><span class=\"line\"></span><br><span class=\"line\">cin &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = a.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i&gt;= <span class=\"number\">0</span>; i -- )  A.<span class=\"built_in\">push_back</span>(a[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = b.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i&gt;= <span class=\"number\">0</span>; i -- )  B.<span class=\"built_in\">push_back</span>(b[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">auto</span> C = <span class=\"built_in\">add</span>(A,B);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = C.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>;i &gt;= <span class=\"number\">0</span>; i --) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,C[i]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<p> <strong>高精度减</strong></p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e6</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;A,vector&lt;<span class=\"type\">int</span>&gt; &amp;B)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(A.<span class=\"built_in\">size</span>() != B.<span class=\"built_in\">size</span>()) <span class=\"keyword\">return</span> A.<span class=\"built_in\">size</span>() &gt; B.<span class=\"built_in\">size</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = A.<span class=\"built_in\">size</span>() ; i &gt;= <span class=\"number\">0</span>; i --)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] != B[i])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> A[i] &gt; B[i];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vector &lt;<span class=\"type\">int</span>&gt; <span class=\"built_in\">sub</span>(vector&lt;<span class=\"type\">int</span>&gt; &amp;A,vector&lt;<span class=\"type\">int</span>&gt; &amp;B)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    vector &lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\"><span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; A.<span class=\"built_in\">size</span>(); i ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        t = A[i] - t;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; B.<span class=\"built_in\">size</span>()) t -= B[i];</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>((t + <span class=\"number\">10</span>) % <span class=\"number\">10</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(t &lt; <span class=\"number\">0</span>) t = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(C.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span> &amp;&amp; C.<span class=\"built_in\">back</span>() == <span class=\"number\">0</span>) C.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">string a,b;</span><br><span class=\"line\">vector &lt;<span class=\"type\">int</span>&gt; A, B;</span><br><span class=\"line\"></span><br><span class=\"line\">cin &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = a.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i&gt;= <span class=\"number\">0</span>; i -- )  A.<span class=\"built_in\">push_back</span>(a[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = b.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i&gt;= <span class=\"number\">0</span>; i -- )  B.<span class=\"built_in\">push_back</span>(b[i] - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">cmp</span>(A,B))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> C = <span class=\"built_in\">sub</span>(A,B);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = C.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>; i &gt;= <span class=\"number\">0</span>; i --) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,C[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> C = <span class=\"built_in\">sub</span>(A,B);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = C.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>;i &gt;= <span class=\"number\">0</span>; i --) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,C[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>高精乘单精</strong>    </p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// C = A * b, A &gt;= 0, b &gt;= 0</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">mul</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;A, <span class=\"type\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; A.<span class=\"built_in\">size</span>() || t; i ++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; A.<span class=\"built_in\">size</span>()) t += A[i] * b;</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>(t % <span class=\"number\">10</span>);</span><br><span class=\"line\">        t /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (C.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span> &amp;&amp; C.<span class=\"built_in\">back</span>() == <span class=\"number\">0</span>) C.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p><strong>高精除单精</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// A / b = C ... r, A &gt;= 0, b &gt; 0</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">div</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;A, <span class=\"type\">int</span> b, <span class=\"type\">int</span> &amp;r)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\">    r = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = A.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i -- )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        r = r * <span class=\"number\">10</span> + A[i];</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>(r / b);</span><br><span class=\"line\">        r %= b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">reverse</span>(C.<span class=\"built_in\">begin</span>(), C.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (C.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span> &amp;&amp; C.<span class=\"built_in\">back</span>() == <span class=\"number\">0</span>) C.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"排序","date":"2023-06-02T16:00:00.000Z","description":"挺久以前的东西了","_content":"# 快速排序    \n>主要基于分治思想      \n\n[不能再模板的模板题](https://www.acwing.com/problem/content/description/787/)  \n\n~~~c++    \n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e6 + 10;\n\nint n;\nint q[N];\n\nvoid quick_sort(int l, int r)\n{\n    if(l >= r) return;\n\n    int x = q[l], i = l - 1, j = r + 1; //就是这个地方导致的超市\n    while(i < j)\n    {\n        do i ++; while(q[i] < x);\n        do j --; while(q[j] > x);\n        if(i < j) swap(q[i],q[j]);\n    }\n    quick_sort(l,j);\n    quick_sort(j+1,r);\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i = 0; i < n; i++) scanf(\"%d\",&q[i]);\n\n    sort(q,q+n);\n\n    for(int i=0;i<n;i++){cout<<q[i]<<\" \";};\n\n    return 0;\n}\n\n\n~~~     \n\n~~虽然甚至没有自带的快排快~~   \n还是传上来了。  __其实取点取随机数就不会超市了__       \n\n---   \n还是一样的题目，写一下\n# 归并排序   \n对比快排更加稳定，适合大数据量\n    \n~~~c++   \n#include  <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e8 + 10;\nint n, a[MAXN], T[MAXN];\nvoid Mergesort(int l, int r) {\n    if (l == r) return; //区间内只有一个数，返回\n    int mid = l + r >> 1; //相当于(l + r) / 2\n    Mergesort(l, mid); //递归左半部分\n    Mergesort(mid + 1, r); //递归右半部分\n    int i = l, j = mid + 1, k = l;\n    while (i <= mid && j <= r) //合并\n        if (a[i] <= a[j]) T[k++] = a[i++];\n        else T[k++] = a[j++];\n    while (i <= mid) T[k++] = a[i++];\n    while (j <= r) T[k++] = a[j++];\n    for (int q = l; q <= r; q++) a[q] = T[q]; //转移\n}\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    Mergesort(1, n);\n    for (int i = 1; i <= n; i++) printf(\"%d \", a[i]);\n    return 0;\n}\n\n\n~~~     \n如果忘记了记得看这个    \n![](https://cdn.luogu.com.cn/upload/image_hosting/xssi3qec.png)\n\n至于冒泡和桶排，便没什么必要了吧\n","source":"_posts/排序.md","raw":"---\ntitle: 排序\ndate: 2023-06-03\ntags: 算法\ndescription: 挺久以前的东西了\n\n---\n# 快速排序    \n>主要基于分治思想      \n\n[不能再模板的模板题](https://www.acwing.com/problem/content/description/787/)  \n\n~~~c++    \n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e6 + 10;\n\nint n;\nint q[N];\n\nvoid quick_sort(int l, int r)\n{\n    if(l >= r) return;\n\n    int x = q[l], i = l - 1, j = r + 1; //就是这个地方导致的超市\n    while(i < j)\n    {\n        do i ++; while(q[i] < x);\n        do j --; while(q[j] > x);\n        if(i < j) swap(q[i],q[j]);\n    }\n    quick_sort(l,j);\n    quick_sort(j+1,r);\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i = 0; i < n; i++) scanf(\"%d\",&q[i]);\n\n    sort(q,q+n);\n\n    for(int i=0;i<n;i++){cout<<q[i]<<\" \";};\n\n    return 0;\n}\n\n\n~~~     \n\n~~虽然甚至没有自带的快排快~~   \n还是传上来了。  __其实取点取随机数就不会超市了__       \n\n---   \n还是一样的题目，写一下\n# 归并排序   \n对比快排更加稳定，适合大数据量\n    \n~~~c++   \n#include  <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e8 + 10;\nint n, a[MAXN], T[MAXN];\nvoid Mergesort(int l, int r) {\n    if (l == r) return; //区间内只有一个数，返回\n    int mid = l + r >> 1; //相当于(l + r) / 2\n    Mergesort(l, mid); //递归左半部分\n    Mergesort(mid + 1, r); //递归右半部分\n    int i = l, j = mid + 1, k = l;\n    while (i <= mid && j <= r) //合并\n        if (a[i] <= a[j]) T[k++] = a[i++];\n        else T[k++] = a[j++];\n    while (i <= mid) T[k++] = a[i++];\n    while (j <= r) T[k++] = a[j++];\n    for (int q = l; q <= r; q++) a[q] = T[q]; //转移\n}\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    Mergesort(1, n);\n    for (int i = 1; i <= n; i++) printf(\"%d \", a[i]);\n    return 0;\n}\n\n\n~~~     \n如果忘记了记得看这个    \n![](https://cdn.luogu.com.cn/upload/image_hosting/xssi3qec.png)\n\n至于冒泡和桶排，便没什么必要了吧\n","slug":"排序","published":1,"updated":"2023-06-16T11:55:33.144Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliyijta00008pwhg9ji00z6l","content":"<h1 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h1><blockquote>\n<p>主要基于分治思想      </p>\n</blockquote>\n<p><a href=\"https://www.acwing.com/problem/content/description/787/\">不能再模板的模板题</a>  </p>\n<pre><code class=\"c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 1e6 + 10;\n\nint n;\nint q[N];\n\nvoid quick_sort(int l, int r)\n&#123;\n    if(l &gt;= r) return;\n\n    int x = q[l], i = l - 1, j = r + 1; //就是这个地方导致的超市\n    while(i &lt; j)\n    &#123;\n        do i ++; while(q[i] &lt; x);\n        do j --; while(q[j] &gt; x);\n        if(i &lt; j) swap(q[i],q[j]);\n    &#125;\n    quick_sort(l,j);\n    quick_sort(j+1,r);\n&#125;\n\nint main()\n&#123;\n    scanf(&quot;%d&quot;,&amp;n);\n    for(int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;,&amp;q[i]);\n\n    sort(q,q+n);\n\n    for(int i=0;i&lt;n;i++)&#123;cout&lt;&lt;q[i]&lt;&lt;&quot; &quot;;&#125;;\n\n    return 0;\n&#125;\n\n</code></pre>\n<p><del>虽然甚至没有自带的快排快</del><br>还是传上来了。  <strong>其实取点取随机数就不会超市了</strong>       </p>\n<hr>\n<p>还是一样的题目，写一下</p>\n<h1 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h1><p>对比快排更加稳定，适合大数据量</p>\n<pre><code class=\"c++\">#include  &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e8 + 10;\nint n, a[MAXN], T[MAXN];\nvoid Mergesort(int l, int r) &#123;\n    if (l == r) return; //区间内只有一个数，返回\n    int mid = l + r &gt;&gt; 1; //相当于(l + r) / 2\n    Mergesort(l, mid); //递归左半部分\n    Mergesort(mid + 1, r); //递归右半部分\n    int i = l, j = mid + 1, k = l;\n    while (i &lt;= mid &amp;&amp; j &lt;= r) //合并\n        if (a[i] &lt;= a[j]) T[k++] = a[i++];\n        else T[k++] = a[j++];\n    while (i &lt;= mid) T[k++] = a[i++];\n    while (j &lt;= r) T[k++] = a[j++];\n    for (int q = l; q &lt;= r; q++) a[q] = T[q]; //转移\n&#125;\nint main() &#123;\n    scanf(&quot;%d&quot;, &amp;n);\n    for (int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, &amp;a[i]);\n    Mergesort(1, n);\n    for (int i = 1; i &lt;= n; i++) printf(&quot;%d &quot;, a[i]);\n    return 0;\n&#125;\n\n</code></pre>\n<p>如果忘记了记得看这个<br><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/xssi3qec.png\"></p>\n<p>至于冒泡和桶排，便没什么必要了吧</p>\n","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<h1 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h1><blockquote>\n<p>主要基于分治思想      </p>\n</blockquote>\n<p><a href=\"https://www.acwing.com/problem/content/description/787/\">不能再模板的模板题</a>  </p>\n<pre><code class=\"c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 1e6 + 10;\n\nint n;\nint q[N];\n\nvoid quick_sort(int l, int r)\n&#123;\n    if(l &gt;= r) return;\n\n    int x = q[l], i = l - 1, j = r + 1; //就是这个地方导致的超市\n    while(i &lt; j)\n    &#123;\n        do i ++; while(q[i] &lt; x);\n        do j --; while(q[j] &gt; x);\n        if(i &lt; j) swap(q[i],q[j]);\n    &#125;\n    quick_sort(l,j);\n    quick_sort(j+1,r);\n&#125;\n\nint main()\n&#123;\n    scanf(&quot;%d&quot;,&amp;n);\n    for(int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;,&amp;q[i]);\n\n    sort(q,q+n);\n\n    for(int i=0;i&lt;n;i++)&#123;cout&lt;&lt;q[i]&lt;&lt;&quot; &quot;;&#125;;\n\n    return 0;\n&#125;\n\n</code></pre>\n<p><del>虽然甚至没有自带的快排快</del><br>还是传上来了。  <strong>其实取点取随机数就不会超市了</strong>       </p>\n<hr>\n<p>还是一样的题目，写一下</p>\n<h1 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h1><p>对比快排更加稳定，适合大数据量</p>\n<pre><code class=\"c++\">#include  &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e8 + 10;\nint n, a[MAXN], T[MAXN];\nvoid Mergesort(int l, int r) &#123;\n    if (l == r) return; //区间内只有一个数，返回\n    int mid = l + r &gt;&gt; 1; //相当于(l + r) / 2\n    Mergesort(l, mid); //递归左半部分\n    Mergesort(mid + 1, r); //递归右半部分\n    int i = l, j = mid + 1, k = l;\n    while (i &lt;= mid &amp;&amp; j &lt;= r) //合并\n        if (a[i] &lt;= a[j]) T[k++] = a[i++];\n        else T[k++] = a[j++];\n    while (i &lt;= mid) T[k++] = a[i++];\n    while (j &lt;= r) T[k++] = a[j++];\n    for (int q = l; q &lt;= r; q++) a[q] = T[q]; //转移\n&#125;\nint main() &#123;\n    scanf(&quot;%d&quot;, &amp;n);\n    for (int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, &amp;a[i]);\n    Mergesort(1, n);\n    for (int i = 1; i &lt;= n; i++) printf(&quot;%d &quot;, a[i]);\n    return 0;\n&#125;\n\n</code></pre>\n<p>如果忘记了记得看这个<br><img src=\"https://cdn.luogu.com.cn/upload/image_hosting/xssi3qec.png\"></p>\n<p>至于冒泡和桶排，便没什么必要了吧</p>\n"},{"title":"期末前的规划","date":"2023-06-02T16:00:00.000Z","description":"总得有所取舍","_content":"\n前几天和学校请来的生涯规划师聊了几句，虽说对选课与人生并无什么帮助。\n\n\n但至少他告诉了我如此偏科三位一体是无望的，那么学考貌似也没有很重要了，为了未来的发展是该有所取舍。\n\n``不选的科目大抵不会再学，也不复习了，我该把更多的时间花在有价值的事情上``\n\n并附上期末前规划表\n\n\n* 数学的立体几何及平面向量方面复习与加强\n\n* 语文``至少``将所有的古文与注释熟悉\n\n* 英语将必修一开始的单词都再默写一次，且复习语法\n\n* 物理没什么好说的，跟上进度就是\n\n* 化学需提升，无机中氮硫等部分尤其需巩固\n\n* 技术？拜托！我是``OIer``欸！！！\n\n* 在信息竞赛上，刷完y总的算法基础课\n\n\n\n\n6.11\n\n已然返校，似乎还什么都没有做，时间不多了。\n\n\n\n\n\n\n\n\n\n","source":"_posts/期末前规划表.md","raw":"---\n\ntitle: 期末前的规划\ndate: 2023-06-03\ntag: 日常\ndescription: 总得有所取舍\n---\n\n前几天和学校请来的生涯规划师聊了几句，虽说对选课与人生并无什么帮助。\n\n\n但至少他告诉了我如此偏科三位一体是无望的，那么学考貌似也没有很重要了，为了未来的发展是该有所取舍。\n\n``不选的科目大抵不会再学，也不复习了，我该把更多的时间花在有价值的事情上``\n\n并附上期末前规划表\n\n\n* 数学的立体几何及平面向量方面复习与加强\n\n* 语文``至少``将所有的古文与注释熟悉\n\n* 英语将必修一开始的单词都再默写一次，且复习语法\n\n* 物理没什么好说的，跟上进度就是\n\n* 化学需提升，无机中氮硫等部分尤其需巩固\n\n* 技术？拜托！我是``OIer``欸！！！\n\n* 在信息竞赛上，刷完y总的算法基础课\n\n\n\n\n6.11\n\n已然返校，似乎还什么都没有做，时间不多了。\n\n\n\n\n\n\n\n\n\n","slug":"期末前规划表","published":1,"updated":"2023-06-16T11:55:42.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliyik0oz000apwhgd48xe6vm","content":"<p>前几天和学校请来的生涯规划师聊了几句，虽说对选课与人生并无什么帮助。</p>\n<p>但至少他告诉了我如此偏科三位一体是无望的，那么学考貌似也没有很重要了，为了未来的发展是该有所取舍。</p>\n<p><code>不选的科目大抵不会再学，也不复习了，我该把更多的时间花在有价值的事情上</code></p>\n<p>并附上期末前规划表</p>\n<ul>\n<li><p>数学的立体几何及平面向量方面复习与加强</p>\n</li>\n<li><p>语文<code>至少</code>将所有的古文与注释熟悉</p>\n</li>\n<li><p>英语将必修一开始的单词都再默写一次，且复习语法</p>\n</li>\n<li><p>物理没什么好说的，跟上进度就是</p>\n</li>\n<li><p>化学需提升，无机中氮硫等部分尤其需巩固</p>\n</li>\n<li><p>技术？拜托！我是<code>OIer</code>欸！！！</p>\n</li>\n<li><p>在信息竞赛上，刷完y总的算法基础课</p>\n</li>\n</ul>\n<p>6.11</p>\n<p>已然返校，似乎还什么都没有做，时间不多了。</p>\n","site":{"data":{"link":[{"class_name":"OJ","class_desc":"OJ罢了","link_list":[{"name":"TZHSOJ","link":"https://tzhsoj.com/","avatar":"https://tzhsoj.com/favicon.ico","descr":"校内OJ"}]},{"class_name":"OIer","class_desc":"狐朋狗友","link_list":[{"name":"Florance","link":"https://www.FloranceYeh.netlify.app","avatar":"https://floranceyeh.netlify.app/images/Florance.png","descr":"Florance's Blog"},{"name":"ERA_YES","link":"https://www.cnblogs.com/EraYEs","avatar":"https://pic.cnblogs.com/avatar/3163018/20230520173717.png","descr":"ERA's Blog"}]}]}},"cover":false,"excerpt":"","more":"<p>前几天和学校请来的生涯规划师聊了几句，虽说对选课与人生并无什么帮助。</p>\n<p>但至少他告诉了我如此偏科三位一体是无望的，那么学考貌似也没有很重要了，为了未来的发展是该有所取舍。</p>\n<p><code>不选的科目大抵不会再学，也不复习了，我该把更多的时间花在有价值的事情上</code></p>\n<p>并附上期末前规划表</p>\n<ul>\n<li><p>数学的立体几何及平面向量方面复习与加强</p>\n</li>\n<li><p>语文<code>至少</code>将所有的古文与注释熟悉</p>\n</li>\n<li><p>英语将必修一开始的单词都再默写一次，且复习语法</p>\n</li>\n<li><p>物理没什么好说的，跟上进度就是</p>\n</li>\n<li><p>化学需提升，无机中氮硫等部分尤其需巩固</p>\n</li>\n<li><p>技术？拜托！我是<code>OIer</code>欸！！！</p>\n</li>\n<li><p>在信息竞赛上，刷完y总的算法基础课</p>\n</li>\n</ul>\n<p>6.11</p>\n<p>已然返校，似乎还什么都没有做，时间不多了。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cliyh57100003gghgc15j6rtc","category_id":"cliyidytn0000pwhgat7ohvjn","_id":"cliyidytp0001pwhgh7rff6pj"}],"PostTag":[{"post_id":"cliyh570x0001gghgfg1nf16t","tag_id":"cliyh57110004gghg0s1r8bz8","_id":"cliyh5715000cgghgdgti0j66"},{"post_id":"cliyh57100003gghgc15j6rtc","tag_id":"cliyh5714000bgghg119wft07","_id":"cliyh5716000hgghg9n522d3t"},{"post_id":"cliyh57120006gghg5eur57z2","tag_id":"cliyh5715000fgghg0h531hx2","_id":"cliyh5716000kgghgabvcg40m"},{"post_id":"cliyh57130008gghg2i9j1mlb","tag_id":"cliyh5716000jgghgfaqj2zmj","_id":"cliyh5717000mgghg3svc5xie"},{"post_id":"cliyh5714000agghggx4l10qq","tag_id":"cliyh5717000lgghg1qqv7yqo","_id":"cliyh5717000ngghgatnr3crq"},{"post_id":"cliyij7480002pwhg9r15b22y","tag_id":"cliyij74a0003pwhghex31kio","_id":"cliyij74b0004pwhgcjfe4t1w"},{"post_id":"cliyijh3a0005pwhgeb3o9niy","tag_id":"cliyijh3b0006pwhgbsb47o17","_id":"cliyijh3b0007pwhggmdea6cx"},{"post_id":"cliyijta00008pwhg9ji00z6l","tag_id":"cliyh5717000lgghg1qqv7yqo","_id":"cliyijta00009pwhg43r5h32x"},{"post_id":"cliyik0oz000apwhgd48xe6vm","tag_id":"cliyij74a0003pwhghex31kio","_id":"cliyik0p1000bpwhg2fpte1ck"}],"Tag":[{"name":"STL","_id":"cliyh57110004gghg0s1r8bz8"},{"name":"encrypt","_id":"cliyh5714000bgghg119wft07"},{"name":"hello2","_id":"cliyh5715000fgghg0h531hx2"},{"name":"hello","_id":"cliyh5716000jgghgfaqj2zmj"},{"name":"算法","_id":"cliyh5717000lgghg1qqv7yqo"},{"name":"日常","_id":"cliyij74a0003pwhghex31kio"},{"name":"圣经","_id":"cliyijh3b0006pwhgbsb47o17"}]}}